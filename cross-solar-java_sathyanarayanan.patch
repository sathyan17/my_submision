From 58f571033ab1b4f6ad87667db38a753fdd671413 Mon Sep 17 00:00:00 2001
From: XO_0_0_1 <sathyanweb@gmail.com>
Date: Sun, 3 Jun 2018 11:01:28 +0530
Subject: [PATCH] My submission

---
 .nb-gradle-properties                              |   24 +
 build.gradle                                       |   20 +
 gradlew                                            |    0
 private/cache/retriever/catalog.xml                |    6 +
 .../xml/ns/dbchangelog/dbchangelog-3.4.xsd         | 1234 +++++++++++++++++++
 .../xml/ns/dbchangelog/dbchangelog-3.5.xsd         | 1285 ++++++++++++++++++++
 .../xml/ns/dbchangelog/dbchangelog-ext.xsd         |    7 +
 .../techtrial/controller/PanelController.java      |   29 +-
 .../crossover/techtrial/dto/DailyElectricity.java  |   10 +
 .../com/crossover/techtrial/dto/PageExtender.java  |   61 +
 .../exceptions/GlobalExceptionHandler.java         |    0
 .../techtrial/model/DailyElectricityModel.java     |  142 +++
 .../repository/DailyElectricityRepository.java     |   18 +
 .../techtrial/service/DailyElectricityService.java |   17 +
 .../service/DailyElectricityServiceImpl.java       |   34 +
 src/main/resources/application.properties          |    2 +-
 .../resources/db/changelog/db.changelog-1.0.xml    |    2 +
 .../resources/db/changelog/db.changelog-2.0.xml    |   30 +
 .../resources/db/changelog/db.changelog-master.xml |    2 +
 .../techtrial/controller/PanelControllerTest.java  |   51 +-
 20 files changed, 2967 insertions(+), 7 deletions(-)
 create mode 100644 .nb-gradle-properties
 mode change 100755 => 100644 gradlew
 create mode 100644 private/cache/retriever/catalog.xml
 create mode 100644 private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd
 create mode 100644 private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd
 create mode 100644 private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd
 create mode 100644 src/main/java/com/crossover/techtrial/dto/PageExtender.java
 mode change 100755 => 100644 src/main/java/com/crossover/techtrial/exceptions/GlobalExceptionHandler.java
 create mode 100644 src/main/java/com/crossover/techtrial/model/DailyElectricityModel.java
 create mode 100644 src/main/java/com/crossover/techtrial/repository/DailyElectricityRepository.java
 create mode 100644 src/main/java/com/crossover/techtrial/service/DailyElectricityService.java
 create mode 100644 src/main/java/com/crossover/techtrial/service/DailyElectricityServiceImpl.java
 mode change 100755 => 100644 src/main/resources/db/changelog/db.changelog-1.0.xml
 create mode 100644 src/main/resources/db/changelog/db.changelog-2.0.xml
 mode change 100755 => 100644 src/main/resources/db/changelog/db.changelog-master.xml

diff --git a/.nb-gradle-properties b/.nb-gradle-properties
new file mode 100644
index 0000000..3ec5651
--- /dev/null
+++ b/.nb-gradle-properties
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<gradle-project-properties>
+  <!--DO NOT EDIT THIS FILE! - Used by the Gradle plugin of NetBeans.-->
+  <target-platform-name>j2se</target-platform-name>
+  <target-platform>1.8</target-platform>
+  <source-level>1.8</source-level>
+  <common-tasks>
+    <task>
+      <display-name>test debug</display-name>
+      <non-blocking>no</non-blocking>
+      <task-names>
+        <name must-exist="yes">test</name>
+      </task-names>
+      <task-args>
+        <arg>--debug-jvm</arg>
+      </task-args>
+      <task-jvm-args/>
+    </task>
+  </common-tasks>
+  <script-platform>
+    <spec-name>j2se</spec-name>
+    <spec-version>1.8</spec-version>
+  </script-platform>
+</gradle-project-properties>
diff --git a/build.gradle b/build.gradle
index f6cec90..74f4a60 100644
--- a/build.gradle
+++ b/build.gradle
@@ -11,6 +11,7 @@ buildscript {
 	dependencies {
 		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
 		classpath('com.github.ksoichiro:gradle-console-reporter:0.5.0')
+                classpath("gradle.plugin.com.palantir:jacoco-coverage:0.4.0")
 	}
 }
 
@@ -21,7 +22,26 @@ apply plugin: "io.spring.dependency-management"
 apply plugin: 'org.springframework.boot'
 apply plugin: 'io.spring.dependency-management'
 apply plugin: 'com.github.ksoichiro.console.reporter'
+apply plugin: "com.palantir.jacoco-coverage"
+apply plugin: 'findbugs'
 
+apply plugin: 'application'
+mainClassName = "com.crossover.techtrial.CrossSolarApplication"
+
+jacocoCoverage {
+    // Enforce minimum code coverage of 50% for every Java file.
+    //fileThreshold 0.5
+
+    // Whitelist files named MyClass.java from coverage requirements.
+    fileThreshold 0.0, "DailyElectricity.java, HourlyElectricity.java, Panel.java"
+}
+
+tasks.withType(FindBugs) {
+    reports {
+        xml.enabled = false
+        html.enabled = true
+    }
+}
 group = 'com.crossover'
 version = '0.0.1-SNAPSHOT'
 sourceCompatibility = 1.8
diff --git a/gradlew b/gradlew
old mode 100755
new mode 100644
diff --git a/private/cache/retriever/catalog.xml b/private/cache/retriever/catalog.xml
new file mode 100644
index 0000000..b73dc0b
--- /dev/null
+++ b/private/cache/retriever/catalog.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog" prefer="system">
+    <system systemId="http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd" uri="www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd"/>
+    <system systemId="http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd" uri="www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd"/>
+    <system systemId="http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd" uri="www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd"/>
+</catalog>
\ No newline at end of file
diff --git a/private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd b/private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd
new file mode 100644
index 0000000..c0d894e
--- /dev/null
+++ b/private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd
@@ -0,0 +1,1234 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
+            targetNamespace="http://www.liquibase.org/xml/ns/dbchangelog"
+            xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+            elementFormDefault="qualified">
+
+    <xsd:simpleType name="propertyExpression" id="propertyExpression">
+        <xsd:restriction base="xsd:string">
+            <xsd:pattern value="$\{[\w\.]+\}"/>
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="booleanExp" id="booleanExp">
+        <xsd:annotation>
+            <xsd:appinfo>
+                <xsd:documentation>Extension to standard XSD boolean type to allow ${} parameters</xsd:documentation>
+            </xsd:appinfo>
+        </xsd:annotation>
+        <xsd:union>
+            <xsd:simpleType>
+                <xsd:restriction base="xsd:boolean"/>
+            </xsd:simpleType>
+            <xsd:simpleType>
+                <xsd:restriction base="propertyExpression"/>
+            </xsd:simpleType>
+        </xsd:union>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="integerExp" id="integerExp">
+        <xsd:annotation>
+            <xsd:appinfo>
+                <xsd:documentation>Extension to standard XSD integer type to allow ${} parameters</xsd:documentation>
+            </xsd:appinfo>
+        </xsd:annotation>
+        <xsd:union>
+            <xsd:simpleType>
+                <xsd:restriction base="xsd:integer"/>
+            </xsd:simpleType>
+            <xsd:simpleType>
+                <xsd:restriction base="propertyExpression"/>
+            </xsd:simpleType>
+        </xsd:union>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="onChangeSetPreconditionErrorOrFail">
+        <xsd:restriction base="xsd:string">
+            <xsd:enumeration value="HALT"/>
+            <xsd:enumeration value="WARN"/>
+            <xsd:enumeration value="CONTINUE"/>
+            <xsd:enumeration value="MARK_RAN"/>
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="onChangeLogPreconditionErrorOrFail">
+        <xsd:restriction base="xsd:string">
+            <xsd:enumeration value="HALT"/>
+            <xsd:enumeration value="WARN"/>
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="onChangeLogPreconditionOnSqlOutput">
+        <xsd:restriction base="xsd:string">
+            <xsd:enumeration value="TEST"/>
+            <xsd:enumeration value="FAIL"/>
+            <xsd:enumeration value="IGNORE"/>
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="onChangeSetValidationFail">
+        <xsd:restriction base="xsd:string">
+            <xsd:enumeration value="HALT"/>
+            <xsd:enumeration value="MARK_RAN"/>
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="objectQuotingStrategy">
+        <xsd:restriction base="xsd:string">
+            <xsd:enumeration value="LEGACY"/>
+            <xsd:enumeration value="QUOTE_ALL_OBJECTS"/>
+            <xsd:enumeration value="QUOTE_ONLY_RESERVED_WORDS"/>
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <!-- This is the main (root) part of the xsd -->
+    <xsd:element name="databaseChangeLog">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="property" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:attribute name="file" type="xsd:string"/>
+                        <xsd:attribute name="name" type="xsd:string"/>
+                        <xsd:attribute name="value" type="xsd:string"/>
+                        <xsd:attribute name="dbms" type="xsd:string"/>
+                        <xsd:attribute name="context" type="xsd:string"/>
+                        <xsd:attribute name="labels" type="xsd:string"/>
+                        <xsd:attribute name="global" type="xsd:boolean"/>
+                    </xsd:complexType>
+                </xsd:element>
+
+                <xsd:element name="preConditions" minOccurs="0" maxOccurs="1">
+                    <xsd:complexType>
+                        <xsd:choice>
+                            <xsd:group ref="PreConditionChildren" maxOccurs="unbounded"/>
+                        </xsd:choice>
+                        <xsd:attribute name="onFailMessage" type="xsd:string"/>
+                        <xsd:attribute name="onErrorMessage" type="xsd:string"/>
+                        <xsd:attribute name="onFail" type="onChangeLogPreconditionErrorOrFail"/>
+                        <xsd:attribute name="onError" type="onChangeLogPreconditionErrorOrFail"/>
+                        <xsd:attribute name="onSqlOutput" type="onChangeLogPreconditionOnSqlOutput"/>
+                    </xsd:complexType>
+                </xsd:element>
+
+                <xsd:choice minOccurs="0" maxOccurs="unbounded">
+                    <xsd:element name="changeSet" minOccurs="0" maxOccurs="unbounded">
+                        <xsd:complexType>
+                            <xsd:sequence>
+                                <xsd:element name="validCheckSum" minOccurs="0" maxOccurs="unbounded">
+                                    <xsd:complexType mixed="true">
+                                        <xsd:sequence>
+                                            <xsd:element ref="comment" minOccurs="0" maxOccurs="1"/>
+                                        </xsd:sequence>
+                                    </xsd:complexType>
+                                </xsd:element>
+                                <xsd:element name="preConditions" minOccurs="0" maxOccurs="1">
+                                    <xsd:annotation>
+                                        <xsd:appinfo>
+                                            <xsd:documentation>onChangeLogPreconditionOnSqlOutput determines what should happen when evaluating this precondition in updateSQL mode. TEST: Run precondition, FAIL: Fail precondition,
+                                                IGNORE: Skip precondition check [DEFAULT]
+                                            </xsd:documentation>
+                                        </xsd:appinfo>
+                                    </xsd:annotation>
+                                    <xsd:complexType>
+                                        <xsd:choice>
+                                            <xsd:group ref="PreConditionChildren" maxOccurs="unbounded"/>
+                                        </xsd:choice>
+                                        <xsd:attribute name="onFailMessage" type="xsd:string"/>
+                                        <xsd:attribute name="onErrorMessage" type="xsd:string"/>
+                                        <xsd:attribute name="onFail" type="onChangeSetPreconditionErrorOrFail"/>
+                                        <xsd:attribute name="onError" type="onChangeSetPreconditionErrorOrFail"/>
+                                        <xsd:attribute name="onSqlOutput" type="onChangeLogPreconditionOnSqlOutput"/>
+                                    </xsd:complexType>
+                                </xsd:element>
+                                <xsd:choice>
+                                    <xsd:element ref="tagDatabase" maxOccurs="1"/>
+                                    <xsd:group ref="changeSetChildren" minOccurs="0" maxOccurs="unbounded"/>
+                                </xsd:choice>
+
+                                <xsd:element name="modifySql" minOccurs="0" maxOccurs="unbounded">
+                                    <xsd:complexType>
+                                        <xsd:choice>
+                                            <xsd:group ref="modifySqlChildren" minOccurs="1" maxOccurs="unbounded"/>
+                                        </xsd:choice>
+                                        <xsd:attribute name="dbms" type="xsd:string"/>
+                                        <xsd:attribute name="context" type="xsd:string"/>
+                                        <xsd:attribute name="labels" type="xsd:string"/>
+                                        <xsd:attribute name="applyToRollback" type="booleanExp"/>
+                                    </xsd:complexType>
+                                </xsd:element>
+
+                            </xsd:sequence>
+                            <xsd:attributeGroup ref="changeSetAttributes"/>
+                            <xsd:anyAttribute namespace="##other" processContents="lax"/>
+                        </xsd:complexType>
+                    </xsd:element>
+
+                    <!-- include -->
+                    <xsd:element name="include" minOccurs="0" maxOccurs="unbounded">
+                        <xsd:complexType>
+                            <xsd:attribute name="file" type="xsd:string" use="required"/>
+                            <xsd:attribute name="relativeToChangelogFile" type="booleanExp"/>
+                            <xsd:anyAttribute namespace="##other" processContents="lax"/>
+                        </xsd:complexType>
+                    </xsd:element>
+                    <xsd:element name="includeAll" minOccurs="0" maxOccurs="unbounded">
+                        <xsd:complexType>
+                            <xsd:attribute name="path" type="xsd:string" use="required"/>
+                            <xsd:attribute name="errorIfMissingOrEmpty" type="booleanExp" default="false"/>
+                            <xsd:attribute name="relativeToChangelogFile" type="booleanExp"/>
+                            <xsd:attribute name="resourceFilter" type="xsd:string"/>
+                            <xsd:anyAttribute namespace="##other" processContents="lax"/>
+                        </xsd:complexType>
+                    </xsd:element>
+                </xsd:choice>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="changeLogAttributes"/>
+            <xsd:anyAttribute namespace="##other" processContents="lax"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:group name="modifySqlChildren">
+        <xsd:choice>
+            <xsd:element name="replace" minOccurs="0" maxOccurs="unbounded">
+                <xsd:complexType>
+                    <xsd:attribute name="replace" type="xsd:string" use="required"/>
+                    <xsd:attribute name="with" type="xsd:string" use="required"/>
+                </xsd:complexType>
+            </xsd:element>
+            <xsd:element name="regExpReplace" minOccurs="0" maxOccurs="unbounded">
+                <xsd:complexType>
+                    <xsd:attribute name="replace" type="xsd:string" use="required"/>
+                    <xsd:attribute name="with" type="xsd:string" use="required"/>
+                </xsd:complexType>
+            </xsd:element>
+            <xsd:element name="prepend" minOccurs="0" maxOccurs="unbounded">
+                <xsd:complexType>
+                    <xsd:attribute name="value" type="xsd:string" use="required"/>
+                </xsd:complexType>
+            </xsd:element>
+            <xsd:element name="append" minOccurs="0" maxOccurs="unbounded">
+                <xsd:complexType>
+                    <xsd:attribute name="value" type="xsd:string" use="required"/>
+                </xsd:complexType>
+            </xsd:element>
+        </xsd:choice>
+    </xsd:group>
+
+    <!-- Attributes for DatabaseInfo -->
+    <xsd:attributeGroup name="DatabaseInfoAttributes">
+        <xsd:attribute name="type" type="xsd:string"/>
+        <xsd:attribute name="version" type="xsd:string"/>
+        <xsd:attribute name="username" type="xsd:string"/>
+        <xsd:attribute name="password" type="xsd:string"/>
+        <xsd:attribute name="port" type="integerExp"/>
+        <xsd:attribute name="host" type="xsd:string"/>
+        <xsd:attribute name="schemaName" type="xsd:string"/>
+        <xsd:attribute name="driverName" type="xsd:string"/>
+    </xsd:attributeGroup>
+
+    <!-- Attributes for changeSet -->
+    <xsd:attributeGroup name="changeLogAttributes">
+        <xsd:attribute name="logicalFilePath" type="xsd:string"/>
+        <xsd:attribute name="objectQuotingStrategy" type="objectQuotingStrategy" default="LEGACY"/>
+    </xsd:attributeGroup>
+
+    <!-- Attributes for changeSet -->
+    <xsd:attributeGroup name="changeSetAttributes">
+        <xsd:attribute name="id" type="xsd:string" use="required"/>
+        <xsd:attribute name="author" type="xsd:string" use="required"/>
+        <xsd:attribute name="context" type="xsd:string"/>
+        <xsd:attribute name="labels" type="xsd:string"/>
+        <xsd:attribute name="dbms" type="xsd:string"/>
+        <xsd:attribute name="runOnChange" type="booleanExp"/>
+        <xsd:attribute name="runAlways" type="booleanExp"/>
+        <xsd:attribute name="failOnError" type="booleanExp"/>
+        <xsd:attribute name="onValidationFail" type="onChangeSetValidationFail"/>
+        <xsd:attribute name="runInTransaction" type="booleanExp" default="true"/>
+        <xsd:attribute name="logicalFilePath" type="xsd:string"/>
+        <xsd:attribute name="objectQuotingStrategy" type="objectQuotingStrategy"/>
+    </xsd:attributeGroup>
+
+    <!-- Attributes for constraints -->
+    <xsd:attributeGroup name="constraintsAttributes">
+        <xsd:attribute name="nullable" type="booleanExp"/>
+        <xsd:attribute name="primaryKey" type="booleanExp"/>
+        <xsd:attribute name="primaryKeyName" type="xsd:string"/>
+        <xsd:attribute name="primaryKeyTablespace" type="xsd:string"/>
+        <xsd:attribute name="unique" type="booleanExp"/>
+        <xsd:attribute name="uniqueConstraintName" type="xsd:string"/>
+        <xsd:attribute name="references" type="xsd:string"/>
+        <xsd:attribute name="referencedTableName" type="xsd:string"/>
+        <xsd:attribute name="referencedColumnNames" type="xsd:string"/>
+        <xsd:attribute name="foreignKeyName" type="xsd:string"/>
+        <xsd:attribute name="deleteCascade" type="booleanExp"/>
+        <xsd:attribute name="deferrable" type="booleanExp"/>
+        <xsd:attribute name="initiallyDeferred" type="booleanExp"/>
+        <xsd:attribute name="checkConstraint" type="xsd:string"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="column">
+        <xsd:attribute name="name" type="xsd:string"/>
+        <xsd:attribute name="computed" type="booleanExp"/>
+        <xsd:attribute name="type" type="xsd:string"/>
+        <xsd:attribute name="value" type="xsd:string"/>
+        <xsd:attribute name="valueNumeric" type="xsd:string"/>
+        <xsd:attribute name="valueBoolean" type="xsd:string"/>
+        <xsd:attribute name="valueDate" type="xsd:string"/>
+        <xsd:attribute name="valueComputed" type="xsd:string"/>
+        <xsd:attribute name="valueSequenceCurrent" type="xsd:string"/>
+        <xsd:attribute name="valueSequenceNext" type="xsd:string"/>
+        <xsd:attribute name="valueBlobFile" type="xsd:string"/>
+        <xsd:attribute name="valueClobFile" type="xsd:string"/>
+        <xsd:attribute name="defaultValue" type="xsd:string"/>
+        <xsd:attribute name="defaultValueNumeric" type="xsd:string"/>
+        <xsd:attribute name="defaultValueDate" type="xsd:string"/>
+        <xsd:attribute name="defaultValueBoolean" type="booleanExp"/>
+        <xsd:attribute name="defaultValueComputed" type="xsd:string"/>
+        <xsd:attribute name="defaultValueSequenceCurrent" type="xsd:string"/>
+        <xsd:attribute name="defaultValueSequenceNext" type="xsd:string"/>
+        <xsd:attribute name="autoIncrement" type="booleanExp"/>
+        <xsd:attribute name="startWith" type="xsd:long"/>
+        <xsd:attribute name="incrementBy" type="xsd:long"/>
+        <xsd:attribute name="remarks" type="xsd:string"/>
+        <xsd:attribute name="encoding" type="xsd:string">
+            <xsd:annotation>
+                <xsd:appinfo>
+                    <xsd:documentation>
+                        Used with valueClobFile to specify file encoding explicitly.
+                    </xsd:documentation>
+                </xsd:appinfo>
+            </xsd:annotation>
+        </xsd:attribute>
+        <xsd:attribute name="descending" type="booleanExp"/>
+        <xsd:anyAttribute namespace="##other" processContents="lax"/>
+    </xsd:attributeGroup>
+
+    <xsd:complexType name="columnType" mixed="true">
+        <xsd:sequence>
+            <xsd:element ref="constraints" minOccurs="0"/>
+            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
+        </xsd:sequence>
+        <xsd:attributeGroup ref="column"/>
+        <xsd:anyAttribute namespace="##other" processContents="lax"/>
+    </xsd:complexType>
+
+    <xsd:attributeGroup name="param">
+        <xsd:attribute name="name" type="xsd:string"/>
+        <xsd:attribute name="value" type="xsd:string"/>
+        <xsd:attribute name="valueNumeric" type="xsd:string"/>
+        <xsd:attribute name="valueBoolean" type="xsd:string"/>
+        <xsd:attribute name="valueDate" type="xsd:string"/>
+        <xsd:attribute name="valueComputed" type="xsd:string"/>
+        <xsd:attribute name="valueSequenceNext" type="xsd:string"/>
+        <xsd:attribute name="valueSequenceCurrent" type="xsd:string"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="tableNameAttribute">
+        <xsd:attribute name="catalogName" type="xsd:string"/>
+        <xsd:attribute name="schemaName" type="xsd:string"/>
+        <xsd:attribute name="tableName" type="xsd:string" use="required"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="dropTableAttributes">
+        <xsd:attributeGroup ref="tableNameAttribute"/>
+        <xsd:attribute name="cascadeConstraints" type="booleanExp"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="renameTableAttributes">
+        <xsd:attribute name="catalogName" type="xsd:string"/>
+        <xsd:attribute name="schemaName" type="xsd:string"/>
+        <xsd:attribute name="oldTableName" type="xsd:string" use="required"/>
+        <xsd:attribute name="newTableName" type="xsd:string" use="required"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="renameViewAttributes">
+        <xsd:attribute name="catalogName" type="xsd:string"/>
+        <xsd:attribute name="schemaName" type="xsd:string"/>
+        <xsd:attribute name="oldViewName" type="xsd:string" use="required"/>
+        <xsd:attribute name="newViewName" type="xsd:string" use="required"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="renameColumnAttributes">
+        <xsd:attributeGroup ref="tableNameAttribute"/>
+        <xsd:attribute name="oldColumnName" type="xsd:string" use="required"/>
+        <xsd:attribute name="newColumnName" type="xsd:string" use="required"/>
+        <xsd:attribute name="columnDataType" type="xsd:string"/>
+        <xsd:attribute name="remarks" type="xsd:string"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="dropColumnAttributes">
+        <xsd:attributeGroup ref="tableNameAttribute"/>
+        <xsd:attribute name="columnName" type="xsd:string"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="sequenceAttributes">
+        <xsd:attribute name="catalogName" type="xsd:string"/>
+        <xsd:attribute name="schemaName" type="xsd:string"/>
+        <xsd:attribute name="sequenceName" type="xsd:string" use="required"/>
+        <xsd:attribute name="startValue" type="xsd:string"/>
+        <xsd:attribute name="incrementBy" type="xsd:string"/>
+        <xsd:attribute name="maxValue" type="xsd:string"/>
+        <xsd:attribute name="minValue" type="xsd:string"/>
+        <xsd:attribute name="ordered" type="booleanExp"/>
+        <xsd:attribute name="cacheSize" type="xsd:nonNegativeInteger"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="renameSequenceAttributes">
+        <xsd:attribute name="catalogName" type="xsd:string"/>
+        <xsd:attribute name="schemaName" type="xsd:string"/>
+        <xsd:attribute name="oldSequenceName" type="xsd:string" use="required"/>
+        <xsd:attribute name="newSequenceName" type="xsd:string" use="required"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="indexName">
+        <xsd:attribute name="indexName" type="xsd:string" use="required"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="createIndex">
+        <xsd:attributeGroup ref="tableNameAttribute"/>
+        <xsd:attributeGroup ref="indexName"/>
+        <xsd:attribute name="associatedWith" type="xsd:string" use="optional"/>
+        <xsd:attribute name="unique" type="booleanExp"/>
+        <xsd:attribute name="clustered" type="booleanExp"/>
+        <xsd:attribute name="tablespace" type="xsd:string"/>
+    </xsd:attributeGroup>
+
+
+    <xsd:element name="addPrimaryKey">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="columnNames" type="xsd:string" use="required"/>
+            <xsd:attribute name="constraintName" type="xsd:string"/>
+            <xsd:attribute name="tablespace" type="xsd:string"/>
+            <xsd:attribute name="clustered" type="booleanExp"/>
+            <xsd:attribute name="forIndexCatalogName" type="xsd:string"/>
+            <xsd:attribute name="forIndexSchemaName" type="xsd:string"/>
+            <xsd:attribute name="forIndexName" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropPrimaryKey">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="constraintName" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="addUniqueConstraint">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="columnNames" type="xsd:string" use="required"/>
+            <xsd:attribute name="constraintName" type="xsd:string"/>
+            <xsd:attribute name="tablespace" type="xsd:string"/>
+            <xsd:attribute name="disabled" type="booleanExp"/>
+            <xsd:attribute name="deferrable" type="booleanExp"/>
+            <xsd:attribute name="initiallyDeferred" type="booleanExp"/>
+            <xsd:attribute name="forIndexCatalogName" type="xsd:string"/>
+            <xsd:attribute name="forIndexSchemaName" type="xsd:string"/>
+            <xsd:attribute name="forIndexName" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropUniqueConstraint">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="constraintName" type="xsd:string"/>
+            <xsd:attribute name="uniqueColumns" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="modifyDataType">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="columnName" type="xsd:string" use="required"/>
+            <xsd:attribute name="newDataType" type="xsd:string" use="required"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="addLookupTable">
+        <xsd:complexType>
+            <xsd:attribute name="existingTableCatalogName" type="xsd:string"/>
+            <xsd:attribute name="existingTableSchemaName" type="xsd:string"/>
+            <xsd:attribute name="existingTableName" type="xsd:string" use="required"/>
+            <xsd:attribute name="existingColumnName" type="xsd:string" use="required"/>
+            <xsd:attribute name="newTableCatalogName" type="xsd:string"/>
+            <xsd:attribute name="newTableSchemaName" type="xsd:string"/>
+            <xsd:attribute name="newTableName" type="xsd:string" use="required"/>
+            <xsd:attribute name="newColumnName" type="xsd:string" use="required"/>
+            <xsd:attribute name="newColumnDataType" type="xsd:string"/>
+            <xsd:attribute name="constraintName" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="addAutoIncrement">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="columnName" type="xsd:string" use="required"/>
+            <xsd:attribute name="columnDataType" type="xsd:string"/>
+            <xsd:attribute name="startWith" type="xsd:long"/>
+            <xsd:attribute name="incrementBy" type="xsd:long"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="addDefaultValue">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="columnName" type="xsd:string" use="required"/>
+            <xsd:attribute name="columnDataType" type="xsd:string"/>
+            <xsd:attribute name="defaultValue" type="xsd:string"/>
+            <xsd:attribute name="defaultValueNumeric" type="xsd:string"/>
+            <xsd:attribute name="defaultValueDate" type="xsd:string"/>
+            <xsd:attribute name="defaultValueBoolean" type="xsd:string"/>
+            <xsd:attribute name="defaultValueComputed" type="xsd:string"/>
+            <xsd:attribute name="defaultValueSequenceNext" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropDefaultValue">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="columnName" type="xsd:string" use="required"/>
+            <xsd:attribute name="columnDataType" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="loadData">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element name="column" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:attribute name="index" type="integerExp"/>
+                        <xsd:attribute name="header" type="xsd:string"/>
+                        <xsd:attribute name="name" type="xsd:string"/>
+                        <xsd:attribute name="type" type="xsd:string"/>
+                        <xsd:attribute name="defaultValue" type="xsd:string"/>
+                        <xsd:attribute name="defaultValueNumeric" type="xsd:string"/>
+                        <xsd:attribute name="defaultValueDate" type="xsd:string"/>
+                        <xsd:attribute name="defaultValueBoolean" type="booleanExp"/>
+                        <xsd:attribute name="defaultValueComputed" type="xsd:string"/>
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="file" type="xsd:string"/>
+            <xsd:attribute name="relativeToChangelogFile" type="booleanExp"/>
+            <xsd:attribute name="encoding" type="xsd:string" default="UTF-8"/>
+            <xsd:attribute name="separator" type="xsd:string" default=","/>
+            <xsd:attribute name="quotchar" type="xsd:string" default="&quot;"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="loadUpdateData">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element name="column" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:attribute name="index" type="integerExp"/>
+                        <xsd:attribute name="header" type="xsd:string"/>
+                        <xsd:attribute name="name" type="xsd:string"/>
+                        <xsd:attribute name="type" type="xsd:string"/>
+                        <xsd:attribute name="defaultValue" type="xsd:string"/>
+                        <xsd:attribute name="defaultValueNumeric" type="xsd:string"/>
+                        <xsd:attribute name="defaultValueDate" type="xsd:string"/>
+                        <xsd:attribute name="defaultValueBoolean" type="booleanExp"/>
+                        <xsd:attribute name="defaultValueComputed" type="xsd:string"/>
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="file" type="xsd:string"/>
+            <xsd:attribute name="relativeToChangelogFile" type="booleanExp"/>
+            <xsd:attribute name="encoding" type="xsd:string" default="UTF-8"/>
+            <xsd:attribute name="primaryKey" type="xsd:string" use="required"/>
+            <xsd:attribute name="onlyUpdate" type="xsd:boolean" default="false"/>
+            <xsd:attribute name="separator" type="xsd:string" default=","/>
+            <xsd:attribute name="quotchar" type="xsd:string" default="&quot;"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:simpleType name="fkCascadeActionOptions">
+        <xsd:restriction base="xsd:token">
+            <xsd:enumeration value="CASCADE"></xsd:enumeration>
+            <xsd:enumeration value="SET NULL"></xsd:enumeration>
+            <xsd:enumeration value="SET DEFAULT"></xsd:enumeration>
+            <xsd:enumeration value="RESTRICT"></xsd:enumeration>
+            <xsd:enumeration value="NO ACTION"></xsd:enumeration>
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:attributeGroup name="addForeignKeyConstraintAttrib">
+        <xsd:attribute name="baseTableCatalogName" type="xsd:string"/>
+        <xsd:attribute name="baseTableSchemaName" type="xsd:string"/>
+        <xsd:attribute name="baseTableName" type="xsd:string" use="required"/>
+        <xsd:attribute name="baseColumnNames" type="xsd:string" use="required"/>
+        <xsd:attribute name="constraintName" type="xsd:string" use="required"/>
+        <xsd:attribute name="referencedTableCatalogName" type="xsd:string"/>
+        <xsd:attribute name="referencedTableSchemaName" type="xsd:string"/>
+        <xsd:attribute name="referencedTableName" type="xsd:string" use="required"/>
+        <xsd:attribute name="referencedColumnNames" type="xsd:string" use="required"/>
+        <xsd:attribute name="deferrable" type="booleanExp"/>
+        <xsd:attribute name="initiallyDeferred" type="booleanExp"/>
+        <xsd:attribute name="deleteCascade" type="booleanExp"/>
+        <xsd:attribute name="onDelete" type="fkCascadeActionOptions"/>
+        <xsd:attribute name="onUpdate" type="fkCascadeActionOptions"/>
+        <xsd:attribute name="referencesUniqueColumn" type="booleanExp"/>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="addNotNullConstraintAttrib">
+        <xsd:attributeGroup ref="tableNameAttribute"/>
+        <xsd:attribute name="columnName" type="xsd:string" use="required"/>
+        <xsd:attribute name="defaultNullValue" type="xsd:string"/>
+        <xsd:attribute name="columnDataType" type="xsd:string"/>
+        <xsd:attribute name="constraintName" type="xsd:string"/>
+    </xsd:attributeGroup>
+
+
+    <xsd:element name="addNotNullConstraint">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="addNotNullConstraintAttrib"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="addForeignKeyConstraint">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="addForeignKeyConstraintAttrib"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:attributeGroup name="dbmsAttrib">
+        <xsd:attribute name="type" type="xsd:string" use="required"/>
+    </xsd:attributeGroup>
+
+    <xsd:element name="dbms">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="dbmsAttrib"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="changeSetExecuted">
+        <xsd:complexType>
+            <xsd:attribute name="id" type="xsd:string" use="required"/>
+            <xsd:attribute name="author" type="xsd:string" use="required"/>
+            <xsd:attribute name="changeLogFile" type="xsd:string" use="required"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="tableExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="tableName" type="xsd:string" use="required"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="columnExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="tableName" type="xsd:string" use="required"/>
+            <xsd:attribute name="columnName" type="xsd:string" use="required"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="sequenceExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="sequenceName" type="xsd:string" use="required"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="foreignKeyConstraintExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="foreignKeyTableName" type="xsd:string"/>
+            <xsd:attribute name="foreignKeyName" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="indexExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="indexName" type="xsd:string"/>
+            <xsd:attribute name="tableName" type="xsd:string"/>
+            <xsd:attribute name="columnNames" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="rowCount">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="tableName" type="xsd:string"/>
+            <xsd:attribute name="expectedRows" type="xsd:int"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="tableIsEmpty">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="tableName" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="changeLogPropertyDefined">
+        <xsd:complexType>
+            <xsd:attribute name="property" type="xsd:string" use="required"/>
+            <xsd:attribute name="value" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="primaryKeyExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="primaryKeyName" type="xsd:string"/>
+            <xsd:attribute name="tableName" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="viewExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="viewName" type="xsd:string" use="required"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="sqlCheck">
+        <xsd:complexType mixed="true">
+            <xsd:attribute name="expectedResult" type="xsd:string" use="required"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="customPrecondition">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="param" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:attribute name="name" type="xsd:string" use="required"/>
+                        <xsd:attribute name="value" type="xsd:string" use="required"/>
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attribute name="className" type="xsd:string" use="required"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="and">
+        <xsd:complexType>
+            <xsd:choice>
+                <xsd:group ref="PreConditionChildren" minOccurs="1" maxOccurs="unbounded"/>
+            </xsd:choice>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="or">
+        <xsd:complexType>
+            <xsd:choice>
+                <xsd:group ref="PreConditionChildren" minOccurs="1" maxOccurs="unbounded"/>
+            </xsd:choice>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="not">
+        <xsd:complexType>
+            <xsd:choice>
+                <xsd:group ref="PreConditionChildren" minOccurs="1" maxOccurs="unbounded"/>
+            </xsd:choice>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:attributeGroup name="runningAsAttrib">
+        <xsd:attribute name="username" type="xsd:string" use="required"/>
+    </xsd:attributeGroup>
+
+    <xsd:element name="runningAs">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="runningAsAttrib"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:attributeGroup name="objectQuotingStrategyAttrib">
+        <xsd:attribute name="strategy" type="xsd:string" use="required"/>
+    </xsd:attributeGroup>
+
+    <xsd:element name="expectedQuotingStrategy">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="objectQuotingStrategyAttrib"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:attributeGroup name="dropForeignKeyConstraintAttrib">
+        <xsd:attribute name="baseTableCatalogName" type="xsd:string"/>
+        <xsd:attribute name="baseTableSchemaName" type="xsd:string"/>
+        <xsd:attribute name="baseTableName" type="xsd:string" use="required"/>
+        <xsd:attribute name="constraintName" type="xsd:string"/>
+    </xsd:attributeGroup>
+
+    <xsd:element name="dropForeignKeyConstraint">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="dropForeignKeyConstraintAttrib"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:attributeGroup name="dropAllForeignKeyConstraintsAttrib">
+        <xsd:attribute name="baseTableCatalogName" type="xsd:string"/>
+        <xsd:attribute name="baseTableSchemaName" type="xsd:string"/>
+        <xsd:attribute name="baseTableName" type="xsd:string" use="required"/>
+    </xsd:attributeGroup>
+
+    <xsd:element name="dropAllForeignKeyConstraints">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="dropAllForeignKeyConstraintsAttrib"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropNotNullConstraint">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="tableName" type="xsd:string" use="required"/>
+            <xsd:attribute name="columnName" type="xsd:string" use="required"/>
+            <xsd:attribute name="columnDataType" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="setTableRemarks">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="tableName" type="xsd:string" use="required"/>
+            <xsd:attribute name="remarks" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="setColumnRemarks">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="tableName" type="xsd:string" use="required"/>
+            <xsd:attribute name="columnName" type="xsd:string" use="required"/>
+            <xsd:attribute name="remarks" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="constraints">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="constraintsAttributes"/>
+        </xsd:complexType>
+    </xsd:element>
+
+
+    <xsd:element name="column">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element ref="constraints" minOccurs="0"/>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="column"/>
+            <xsd:anyAttribute namespace="##other" processContents="lax"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="param">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="param"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- Children for createTable -->
+    <xsd:element name="createTable">
+        <xsd:complexType>
+            <xsd:choice maxOccurs="unbounded">
+                <xsd:element ref="column" minOccurs="1" maxOccurs="unbounded"/>
+                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+            </xsd:choice>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="tablespace" type="xsd:string"/>
+            <xsd:attribute name="remarks" type="xsd:string"/>
+            <xsd:anyAttribute namespace="##other" processContents="lax"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- Children for createView -->
+    <xsd:element name="createView">
+        <xsd:complexType>
+            <xsd:simpleContent>
+                <xsd:extension base="xsd:string">
+                    <xsd:attribute name="catalogName" type="xsd:string"/>
+                    <xsd:attribute name="schemaName" type="xsd:string"/>
+                    <xsd:attribute name="viewName" type="xsd:string" use="required"/>
+                    <xsd:attribute name="replaceIfExists" type="booleanExp"/>
+                    <xsd:attribute name="fullDefinition" type="booleanExp"/>
+                </xsd:extension>
+            </xsd:simpleContent>
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- Children for insert -->
+    <xsd:element name="insert">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element ref="column" maxOccurs="unbounded"/>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="dbms" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="update">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element ref="column" minOccurs="1" maxOccurs="unbounded"/>
+                <xsd:element name="where" minOccurs="0" maxOccurs="1"/>
+                <xsd:element ref="whereParams" minOccurs="0" maxOccurs="1"/>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="whereParams">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element ref="param" minOccurs="1" maxOccurs="unbounded"/>
+            </xsd:sequence>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="delete">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element name="where" minOccurs="0" maxOccurs="1"/>
+                <xsd:element ref="whereParams" minOccurs="0" maxOccurs="1"/>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- Children for addColum -->
+    <xsd:element name="addColumn">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="column" minOccurs="1" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:complexContent mixed="true">
+                            <xsd:extension base="columnType">
+                                <xsd:attribute name="beforeColumn" type="xsd:string"/>
+                                <xsd:attribute name="afterColumn" type="xsd:string"/>
+                                <xsd:attribute name="position" type="xsd:integer"/>
+                            </xsd:extension>
+                        </xsd:complexContent>
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="rollback">
+        <xsd:complexType mixed="true">
+            <xsd:choice>
+                <xsd:group ref="changeSetChildren" minOccurs="0" maxOccurs="unbounded"/>
+            </xsd:choice>
+            <xsd:attribute name="changeSetPath" type="xsd:string"/>
+            <xsd:attribute name="changeSetAuthor" type="xsd:string"/>
+            <xsd:attribute name="changeSetId" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- comment -->
+    <xsd:element name="comment" type="xsd:string"/>
+
+    <!-- sql -->
+    <xsd:element name="sql">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element ref="comment" minOccurs="0" maxOccurs="1"/>
+            </xsd:sequence>
+            <xsd:attribute name="stripComments" type="booleanExp"/>
+            <xsd:attribute name="splitStatements" type="booleanExp"/>
+            <xsd:attribute name="endDelimiter" type="xsd:string"/>
+            <xsd:attribute name="dbms" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="createProcedure">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element ref="comment" minOccurs="0" maxOccurs="1"/>
+            </xsd:sequence>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+            <xsd:attribute name="procedureName" type="xsd:string"/>
+            <xsd:attribute name="path" type="xsd:string"/>
+            <xsd:attribute name="encoding" type="xsd:string"/>
+            <xsd:attribute name="relativeToChangelogFile" type="booleanExp"/>
+            <xsd:attribute name="dbms" type="xsd:string"/>
+            <xsd:attribute name="replaceIfExists" type="xsd:boolean"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="executeCommand">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="arg" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:attribute name="value" type="xsd:string" use="required"/>
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attribute name="executable" type="xsd:string" use="required"/>
+            <xsd:attribute name="os" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="sqlFile">
+        <xsd:complexType>
+            <xsd:attribute name="path" type="xsd:string" use="required"/>
+            <xsd:attribute name="stripComments" type="booleanExp"/>
+            <xsd:attribute name="splitStatements" type="booleanExp"/>
+            <xsd:attribute name="encoding" type="xsd:string" default="UTF-8"/>
+            <xsd:attribute name="endDelimiter" type="xsd:string"/>
+            <xsd:attribute name="relativeToChangelogFile" type="booleanExp"/>
+            <xsd:attribute name="dbms" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="tagDatabase">
+        <xsd:complexType>
+            <xsd:attribute name="tag" type="xsd:string" use="required"/>
+            <xsd:anyAttribute namespace="##other" processContents="lax"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="stop">
+        <xsd:complexType mixed="true"/>
+    </xsd:element>
+
+    <xsd:element name="empty"/>
+
+    <xsd:element name="output">
+        <xsd:complexType mixed="true">
+            <xsd:attribute name="target" type="xsd:string"/>
+        </xsd:complexType>
+
+    </xsd:element>
+
+    <!-- renameTable -->
+    <xsd:element name="renameTable">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="renameTableAttributes"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="renameView">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="renameViewAttributes"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- dropTable -->
+    <xsd:element name="dropTable">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="dropTableAttributes"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropView">
+        <xsd:complexType>
+            <xsd:attribute name="viewName" type="xsd:string" use="required"/>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropProcedure">
+        <xsd:complexType>
+            <xsd:attribute name="procedureName" type="xsd:string" use="required"/>
+            <xsd:attribute name="catalogName" type="xsd:string"/>
+            <xsd:attribute name="schemaName" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- renameColumn -->
+    <xsd:element name="renameColumn">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="renameColumnAttributes"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropColumn">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="column" minOccurs="0" maxOccurs="unbounded" type="columnType"/>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="dropColumnAttributes"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="mergeColumns">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attribute name="column1Name" type="xsd:string" use="required"/>
+            <xsd:attribute name="joinString" type="xsd:string" use="required"/>
+            <xsd:attribute name="column2Name" type="xsd:string" use="required"/>
+            <xsd:attribute name="finalColumnName" type="xsd:string" use="required"/>
+            <xsd:attribute name="finalColumnType" type="xsd:string" use="required"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="createSequence">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="sequenceAttributes"/>
+            <xsd:attribute name="cycle" type="booleanExp">
+                <xsd:annotation>
+                    <xsd:documentation>
+                        true for a cycling sequence, false for a non-cycling sequence.
+                        Default is false.
+                    </xsd:documentation>
+                </xsd:annotation>
+            </xsd:attribute>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="alterSequence">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="sequenceAttributes"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropSequence">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="sequenceAttributes"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="renameSequence">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="renameSequenceAttributes"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="createIndex">
+        <xsd:complexType>
+            <xsd:choice maxOccurs="unbounded">
+                <xsd:element ref="column" maxOccurs="unbounded"/>
+                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+            </xsd:choice>
+            <xsd:attributeGroup ref="createIndex"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropIndex">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute"/>
+            <xsd:attributeGroup ref="indexName"/>
+            <xsd:attribute name="associatedWith" type="xsd:string" use="optional"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="customChange">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="param" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType mixed="true">
+                        <xsd:attribute name="name" type="xsd:string" use="required"/>
+                        <xsd:attribute name="value" type="xsd:string"/>
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attribute name="class" type="xsd:string" use="required"/>
+            <xsd:anyAttribute processContents="lax"/>
+        </xsd:complexType>
+    </xsd:element>
+
+
+    <!-- Children for changeSet -->
+    <xsd:group name="changeSetChildren">
+        <xsd:choice>
+            <xsd:element ref="comment" maxOccurs="1"/>
+            <xsd:element ref="createTable" maxOccurs="unbounded"/>
+            <xsd:element ref="dropTable" maxOccurs="unbounded"/>
+            <xsd:element ref="createView" maxOccurs="unbounded"/>
+            <xsd:element ref="renameView" maxOccurs="unbounded"/>
+            <xsd:element ref="dropView" maxOccurs="unbounded"/>
+            <xsd:element ref="insert" maxOccurs="unbounded"/>
+            <xsd:element ref="addColumn" maxOccurs="unbounded"/>
+            <xsd:element ref="sql" maxOccurs="unbounded"/>
+            <xsd:element ref="createProcedure" maxOccurs="unbounded"/>
+            <xsd:element ref="dropProcedure" maxOccurs="unbounded"/>
+            <xsd:element ref="sqlFile" maxOccurs="unbounded"/>
+            <xsd:element ref="renameTable" maxOccurs="unbounded"/>
+            <xsd:element ref="renameColumn" maxOccurs="unbounded"/>
+            <xsd:element ref="dropColumn" maxOccurs="unbounded"/>
+            <xsd:element ref="mergeColumns" maxOccurs="unbounded"/>
+            <xsd:element ref="modifyDataType" maxOccurs="unbounded"/>
+            <xsd:element ref="createSequence" maxOccurs="unbounded"/>
+            <xsd:element ref="alterSequence" maxOccurs="unbounded"/>
+            <xsd:element ref="dropSequence" maxOccurs="unbounded"/>
+            <xsd:element ref="renameSequence" maxOccurs="unbounded"/>
+            <xsd:element ref="createIndex" maxOccurs="unbounded"/>
+            <xsd:element ref="dropIndex" maxOccurs="unbounded"/>
+            <xsd:element ref="addNotNullConstraint" maxOccurs="unbounded"/>
+            <xsd:element ref="dropNotNullConstraint" maxOccurs="unbounded"/>
+            <xsd:element ref="addForeignKeyConstraint" maxOccurs="unbounded"/>
+            <xsd:element ref="dropForeignKeyConstraint" maxOccurs="unbounded"/>
+            <xsd:element ref="dropAllForeignKeyConstraints"
+                         maxOccurs="unbounded"/>
+            <xsd:element ref="addPrimaryKey" maxOccurs="unbounded"/>
+            <xsd:element ref="dropPrimaryKey" maxOccurs="unbounded"/>
+            <xsd:element ref="addLookupTable" maxOccurs="unbounded"/>
+            <xsd:element ref="addAutoIncrement" maxOccurs="unbounded"/>
+            <xsd:element ref="addDefaultValue" maxOccurs="unbounded"/>
+            <xsd:element ref="dropDefaultValue" maxOccurs="unbounded"/>
+            <xsd:element ref="addUniqueConstraint" maxOccurs="unbounded"/>
+            <xsd:element ref="dropUniqueConstraint" maxOccurs="unbounded"/>
+            <xsd:element ref="setTableRemarks" maxOccurs="unbounded"/>
+            <xsd:element ref="setColumnRemarks" maxOccurs="unbounded"/>
+            <xsd:element ref="customChange" maxOccurs="unbounded"/>
+            <xsd:element ref="update" maxOccurs="unbounded"/>
+            <xsd:element ref="delete" maxOccurs="unbounded"/>
+            <xsd:element ref="loadData" maxOccurs="unbounded"/>
+            <xsd:element ref="loadUpdateData" maxOccurs="unbounded"/>
+            <xsd:element ref="executeCommand" maxOccurs="unbounded"/>
+            <xsd:element ref="stop" maxOccurs="unbounded"/>
+            <xsd:element ref="output" maxOccurs="unbounded"/>
+            <xsd:element ref="empty" maxOccurs="unbounded"/>
+            <xsd:element ref="rollback" maxOccurs="1"/>
+            <xsd:any namespace="##other" processContents="lax" minOccurs="0"
+                     maxOccurs="unbounded"/>
+        </xsd:choice>
+    </xsd:group>
+
+    <!-- Children for Precondition -->
+    <xsd:group name="PreConditionChildren">
+        <xsd:sequence>
+            <xsd:choice>
+                <xsd:element ref="and" maxOccurs="unbounded"/>
+                <xsd:element ref="or" maxOccurs="unbounded"/>
+                <xsd:element ref="not" maxOccurs="unbounded"/>
+                <xsd:element ref="dbms" maxOccurs="unbounded"/>
+                <xsd:element ref="runningAs" maxOccurs="unbounded"/>
+                <xsd:element ref="changeSetExecuted" maxOccurs="unbounded"/>
+                <xsd:element ref="tableExists" maxOccurs="unbounded"/>
+                <xsd:element ref="columnExists" maxOccurs="unbounded"/>
+                <xsd:element ref="sequenceExists" maxOccurs="unbounded"/>
+                <xsd:element ref="foreignKeyConstraintExists" maxOccurs="unbounded"/>
+                <xsd:element ref="indexExists" maxOccurs="unbounded"/>
+                <xsd:element ref="primaryKeyExists" maxOccurs="unbounded"/>
+                <xsd:element ref="viewExists" maxOccurs="unbounded"/>
+                <xsd:element ref="tableIsEmpty" maxOccurs="unbounded"/>
+                <xsd:element ref="rowCount" maxOccurs="unbounded"/>
+                <xsd:element ref="sqlCheck" maxOccurs="unbounded"/>
+                <xsd:element ref="changeLogPropertyDefined" maxOccurs="unbounded"/>
+                <xsd:element ref="expectedQuotingStrategy" maxOccurs="unbounded"/>
+                <xsd:element ref="customPrecondition" maxOccurs="unbounded"/>
+                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
+            </xsd:choice>
+        </xsd:sequence>
+    </xsd:group>
+
+</xsd:schema>
diff --git a/private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd b/private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd
new file mode 100644
index 0000000..bcd785f
--- /dev/null
+++ b/private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd
@@ -0,0 +1,1285 @@
+﻿<?xml version="1.0" encoding="UTF-8"?>
+
+<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
+            targetNamespace="http://www.liquibase.org/xml/ns/dbchangelog" xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+            elementFormDefault="qualified">
+
+    <xsd:simpleType name="propertyExpression" id="propertyExpression">
+        <xsd:restriction base="xsd:string">
+            <xsd:pattern value="$\{[\w\.]+\}"/>
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="booleanExp" id="booleanExp">
+        <xsd:annotation>
+            <xsd:appinfo>
+                <xsd:documentation>Extension to standard XSD boolean type to allow ${} parameters</xsd:documentation>
+            </xsd:appinfo>
+        </xsd:annotation>
+        <xsd:union>
+            <xsd:simpleType>
+                <xsd:restriction base="xsd:boolean"/>
+            </xsd:simpleType>
+            <xsd:simpleType>
+                <xsd:restriction base="propertyExpression"/>
+            </xsd:simpleType>
+        </xsd:union>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="integerExp" id="integerExp">
+        <xsd:annotation>
+            <xsd:appinfo>
+                <xsd:documentation>Extension to standard XSD integer type to allow ${} parameters</xsd:documentation>
+            </xsd:appinfo>
+        </xsd:annotation>
+        <xsd:union>
+            <xsd:simpleType>
+                <xsd:restriction base="xsd:integer"/>
+            </xsd:simpleType>
+            <xsd:simpleType>
+                <xsd:restriction base="propertyExpression"/>
+            </xsd:simpleType>
+        </xsd:union>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="onChangeSetPreconditionErrorOrFail">
+        <xsd:restriction base="xsd:string">
+            <xsd:enumeration value="HALT" />
+            <xsd:enumeration value="WARN" />
+            <xsd:enumeration value="CONTINUE" />
+            <xsd:enumeration value="MARK_RAN" />
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="onChangeLogPreconditionErrorOrFail">
+        <xsd:restriction base="xsd:string">
+            <xsd:enumeration value="HALT" />
+            <xsd:enumeration value="WARN" />
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="onChangeLogPreconditionOnSqlOutput">
+        <xsd:restriction base="xsd:string">
+            <xsd:enumeration value="TEST" />
+            <xsd:enumeration value="FAIL" />
+            <xsd:enumeration value="IGNORE" />
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="onChangeSetValidationFail">
+        <xsd:restriction base="xsd:string">
+            <xsd:enumeration value="HALT" />
+            <xsd:enumeration value="MARK_RAN" />
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:simpleType name="objectQuotingStrategy">
+        <xsd:restriction base="xsd:string">
+            <xsd:enumeration value="LEGACY" />
+            <xsd:enumeration value="QUOTE_ALL_OBJECTS" />
+            <xsd:enumeration value="QUOTE_ONLY_RESERVED_WORDS" />
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <!-- This is the main (root) part of the xsd -->
+    <xsd:element name="databaseChangeLog">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="property" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:attribute name="file" type="xsd:string" />
+                        <xsd:attribute name="name" type="xsd:string" />
+                        <xsd:attribute name="value" type="xsd:string" />
+                        <xsd:attribute name="dbms" type="xsd:string" />
+                        <xsd:attribute name="context" type="xsd:string" />
+                        <xsd:attribute name="labels" type="xsd:string" />
+                        <xsd:attribute name="global" type="xsd:boolean"/>
+                    </xsd:complexType>
+                </xsd:element>
+
+                <xsd:element name="preConditions" minOccurs="0"
+                             maxOccurs="1">
+                    <xsd:complexType>
+                        <xsd:choice>
+                            <xsd:group ref="PreConditionChildren" maxOccurs="unbounded" />
+                        </xsd:choice>
+                        <xsd:attribute name="onFailMessage" type="xsd:string" />
+                        <xsd:attribute name="onErrorMessage" type="xsd:string" />
+                        <xsd:attribute name="onFail"
+                                       type="onChangeLogPreconditionErrorOrFail" />
+                        <xsd:attribute name="onError"
+                                       type="onChangeLogPreconditionErrorOrFail" />
+                        <xsd:attribute name="onSqlOutput"
+                                       type="onChangeLogPreconditionOnSqlOutput" />
+                    </xsd:complexType>
+                </xsd:element>
+
+                <xsd:choice minOccurs="0" maxOccurs="unbounded">
+                    <xsd:element name="changeSet" minOccurs="0" maxOccurs="unbounded">
+                        <xsd:complexType>
+                            <xsd:sequence>
+                                <xsd:element name="validCheckSum" minOccurs="0"
+                                             maxOccurs="unbounded">
+                                    <xsd:complexType mixed="true">
+                                        <xsd:sequence>
+                                            <xsd:element ref="comment" minOccurs="0"
+                                                         maxOccurs="1" />
+                                        </xsd:sequence>
+                                    </xsd:complexType>
+                                </xsd:element>
+                                <xsd:element name="preConditions" minOccurs="0"
+                                             maxOccurs="1">
+                                    <xsd:annotation>
+                                        <xsd:appinfo>
+                                            <xsd:documentation>onChangeLogPreconditionOnSqlOutput determines what should happen when evaluating this precondition in updateSQL mode.  TEST: Run precondition, FAIL: Fail precondition, IGNORE: Skip precondition check [DEFAULT]</xsd:documentation>
+                                        </xsd:appinfo>
+                                    </xsd:annotation>
+                                    <xsd:complexType>
+                                        <xsd:choice>
+                                            <xsd:group ref="PreConditionChildren" maxOccurs="unbounded" />
+                                        </xsd:choice>
+                                        <xsd:attribute name="onFailMessage" type="xsd:string" />
+                                        <xsd:attribute name="onErrorMessage" type="xsd:string" />
+                                        <xsd:attribute name="onFail"
+                                                       type="onChangeSetPreconditionErrorOrFail" />
+                                        <xsd:attribute name="onError"
+                                                       type="onChangeSetPreconditionErrorOrFail" />
+                                        <xsd:attribute name="onSqlOutput"
+                                                       type="onChangeLogPreconditionOnSqlOutput" />
+                                    </xsd:complexType>
+                                </xsd:element>
+                                <xsd:choice>
+                                    <xsd:element ref="tagDatabase" maxOccurs="1" />
+                                    <xsd:group ref="changeSetChildren" minOccurs="0"
+                                               maxOccurs="unbounded" />
+                                </xsd:choice>
+
+                                <xsd:element name="modifySql" minOccurs="0"
+                                             maxOccurs="unbounded">
+                                    <xsd:complexType>
+                                        <xsd:choice>
+                                            <xsd:group ref="modifySqlChildren" minOccurs="1"
+                                                       maxOccurs="unbounded" />
+                                        </xsd:choice>
+                                        <xsd:attribute name="dbms" type="xsd:string" />
+                                        <xsd:attribute name="context" type="xsd:string" />
+                                        <xsd:attribute name="labels" type="xsd:string" />
+                                        <xsd:attribute name="applyToRollback" type="booleanExp" />
+                                    </xsd:complexType>
+                                </xsd:element>
+
+                            </xsd:sequence>
+                            <xsd:attributeGroup ref="changeSetAttributes" />
+                            <xsd:anyAttribute namespace="##other" processContents="lax"/>
+                        </xsd:complexType>
+                    </xsd:element>
+
+                    <!-- include -->
+                    <xsd:element name="include" minOccurs="0" maxOccurs="unbounded">
+                        <xsd:complexType>
+                            <xsd:attribute name="file" type="xsd:string" use="required" />
+                            <xsd:attribute name="relativeToChangelogFile" type="booleanExp" />
+                            <xsd:attribute name="context" type="xsd:string" />
+                            <xsd:anyAttribute namespace="##other"  processContents="lax"/>
+                        </xsd:complexType>
+                    </xsd:element>
+                    <xsd:element name="includeAll" minOccurs="0" maxOccurs="unbounded">
+                        <xsd:complexType>
+                            <xsd:attribute name="path" type="xsd:string" use="required" />
+                            <xsd:attribute name="errorIfMissingOrEmpty" type="booleanExp" default="false"/>
+                            <xsd:attribute name="relativeToChangelogFile" type="booleanExp" />
+                            <xsd:attribute name="resourceComparator" type="xsd:string"/>
+                            <xsd:attribute name="filter" type="xsd:string" />
+                            <xsd:attribute name="context" type="xsd:string" />
+                            <xsd:anyAttribute namespace="##other"  processContents="lax"/>
+                        </xsd:complexType>
+                    </xsd:element>
+                </xsd:choice>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="changeLogAttributes" />
+            <xsd:anyAttribute namespace="##other"  processContents="lax"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:group name="modifySqlChildren">
+        <xsd:choice>
+            <xsd:element name="replace" minOccurs="0" maxOccurs="unbounded">
+                <xsd:complexType>
+                    <xsd:attribute name="replace" type="xsd:string" use="required" />
+                    <xsd:attribute name="with" type="xsd:string" use="required" />
+                </xsd:complexType>
+            </xsd:element>
+            <xsd:element name="regExpReplace" minOccurs="0"
+                         maxOccurs="unbounded">
+                <xsd:complexType>
+                    <xsd:attribute name="replace" type="xsd:string" use="required" />
+                    <xsd:attribute name="with" type="xsd:string" use="required" />
+                </xsd:complexType>
+            </xsd:element>
+            <xsd:element name="prepend" minOccurs="0" maxOccurs="unbounded">
+                <xsd:complexType>
+                    <xsd:attribute name="value" type="xsd:string" use="required" />
+                </xsd:complexType>
+            </xsd:element>
+            <xsd:element name="append" minOccurs="0" maxOccurs="unbounded">
+                <xsd:complexType>
+                    <xsd:attribute name="value" type="xsd:string" use="required" />
+                </xsd:complexType>
+            </xsd:element>
+        </xsd:choice>
+    </xsd:group>
+
+    <!-- Attributes for DatabaseInfo -->
+    <xsd:attributeGroup name="DatabaseInfoAttributes">
+        <xsd:attribute name="type" type="xsd:string" />
+        <xsd:attribute name="version" type="xsd:string" />
+        <xsd:attribute name="username" type="xsd:string" />
+        <xsd:attribute name="password" type="xsd:string" />
+        <xsd:attribute name="port" type="integerExp" />
+        <xsd:attribute name="host" type="xsd:string" />
+        <xsd:attribute name="schemaName" type="xsd:string" />
+        <xsd:attribute name="driverName" type="xsd:string" />
+    </xsd:attributeGroup>
+
+    <!-- Attributes for changeSet -->
+    <xsd:attributeGroup name="changeLogAttributes">
+        <xsd:attribute name="logicalFilePath" type="xsd:string" />
+        <xsd:attribute name="context" type="xsd:string" />
+        <xsd:attribute name="objectQuotingStrategy" type="objectQuotingStrategy" default="LEGACY" />
+    </xsd:attributeGroup>
+
+    <!-- Attributes for changeSet -->
+    <xsd:attributeGroup name="changeSetAttributes">
+        <xsd:attribute name="id" type="xsd:string" use="required" />
+        <xsd:attribute name="author" type="xsd:string" use="required" />
+        <xsd:attribute name="context" type="xsd:string" />
+        <xsd:attribute name="labels" type="xsd:string" />
+        <xsd:attribute name="dbms" type="xsd:string" />
+        <xsd:attribute name="runOnChange" type="booleanExp" />
+        <xsd:attribute name="runAlways" type="booleanExp" />
+        <xsd:attribute name="failOnError" type="booleanExp" />
+        <xsd:attribute name="onValidationFail" type="onChangeSetValidationFail" />
+        <xsd:attribute name="runInTransaction" type="booleanExp" default="true" />
+        <xsd:attribute name="logicalFilePath" type="xsd:string" />
+        <xsd:attribute name="objectQuotingStrategy" type="objectQuotingStrategy" />
+        <xsd:attribute name="created" type="xsd:string"/>
+        <xsd:attribute name="runOrder" type="xsd:string"/>
+    </xsd:attributeGroup>
+
+    <!-- Attributes for constraints -->
+    <xsd:attributeGroup name="constraintsAttributes">
+        <xsd:attribute name="nullable" type="booleanExp" />
+        <xsd:attribute name="primaryKey" type="booleanExp" />
+        <xsd:attribute name="primaryKeyName" type="xsd:string" />
+        <xsd:attribute name="primaryKeyTablespace" type="xsd:string" />
+        <xsd:attribute name="unique" type="booleanExp" />
+        <xsd:attribute name="uniqueConstraintName" type="xsd:string" />
+        <xsd:attribute name="references" type="xsd:string" />
+        <xsd:attribute name="referencedTableCatalogName" type="xsd:string" />
+        <xsd:attribute name="referencedTableSchemaName" type="xsd:string" />
+        <xsd:attribute name="referencedTableName" type="xsd:string"/>
+        <xsd:attribute name="referencedColumnNames" type="xsd:string"/>
+        <xsd:attribute name="foreignKeyName" type="xsd:string" />
+        <xsd:attribute name="deleteCascade" type="booleanExp" />
+        <xsd:attribute name="deferrable" type="booleanExp" />
+        <xsd:attribute name="initiallyDeferred" type="booleanExp" />
+        <xsd:attribute name="checkConstraint" type="xsd:string" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="column">
+        <xsd:attribute name="name" type="xsd:string"/>
+        <xsd:attribute name="computed" type="booleanExp"/>
+        <xsd:attribute name="type" type="xsd:string" />
+        <xsd:attribute name="value" type="xsd:string" />
+        <xsd:attribute name="valueNumeric" type="xsd:string" />
+        <xsd:attribute name="valueBoolean" type="xsd:string" />
+        <xsd:attribute name="valueDate" type="xsd:string" />
+        <xsd:attribute name="valueComputed" type="xsd:string" />
+        <xsd:attribute name="valueSequenceCurrent" type="xsd:string" />
+        <xsd:attribute name="valueSequenceNext" type="xsd:string" />
+        <xsd:attribute name="valueBlobFile" type="xsd:string"/>
+        <xsd:attribute name="valueClobFile" type="xsd:string"/>
+        <xsd:attribute name="defaultValue" type="xsd:string" />
+        <xsd:attribute name="defaultValueNumeric" type="xsd:string" />
+        <xsd:attribute name="defaultValueDate" type="xsd:string" />
+        <xsd:attribute name="defaultValueBoolean" type="booleanExp" />
+        <xsd:attribute name="defaultValueComputed" type="xsd:string" />
+        <xsd:attribute name="defaultValueSequenceCurrent" type="xsd:string" />
+        <xsd:attribute name="defaultValueSequenceNext" type="xsd:string" />
+        <xsd:attribute name="autoIncrement" type="booleanExp" />
+        <xsd:attribute name="startWith" type="xsd:long" />
+        <xsd:attribute name="incrementBy" type="xsd:long" />
+        <xsd:attribute name="remarks" type="xsd:string" />
+        <xsd:attribute name="encoding" type="xsd:string">
+            <xsd:annotation>
+                <xsd:appinfo>
+                    <xsd:documentation>
+                        Used with valueClobFile to specify file encoding explicitly.
+                    </xsd:documentation>
+                </xsd:appinfo>
+            </xsd:annotation>
+        </xsd:attribute>
+        <xsd:anyAttribute namespace="##other" processContents="lax"/>
+    </xsd:attributeGroup>
+
+    <xsd:complexType name="columnType" mixed="true">
+        <xsd:sequence>
+            <xsd:element ref="constraints" minOccurs="0"/>
+            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
+        </xsd:sequence>
+        <xsd:attributeGroup ref="column"/>
+        <xsd:anyAttribute namespace="##other" processContents="lax" />
+    </xsd:complexType>
+
+    <xsd:attributeGroup name="param">
+        <xsd:attribute name="name" type="xsd:string" />
+        <xsd:attribute name="value" type="xsd:string" />
+        <xsd:attribute name="valueNumeric" type="xsd:string" />
+        <xsd:attribute name="valueBoolean" type="xsd:string" />
+        <xsd:attribute name="valueDate" type="xsd:string" />
+        <xsd:attribute name="valueComputed" type="xsd:string" />
+        <xsd:attribute name="valueSequenceNext" type="xsd:string" />
+        <xsd:attribute name="valueSequenceCurrent" type="xsd:string" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="tableNameAttribute">
+        <xsd:attribute name="catalogName" type="xsd:string" />
+        <xsd:attribute name="schemaName" type="xsd:string" />
+        <xsd:attribute name="tableName" type="xsd:string" use="required" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="dropTableAttributes">
+        <xsd:attributeGroup ref="tableNameAttribute" />
+        <xsd:attribute name="cascadeConstraints" type="booleanExp" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="renameTableAttributes">
+        <xsd:attribute name="catalogName" type="xsd:string" />
+        <xsd:attribute name="schemaName" type="xsd:string" />
+        <xsd:attribute name="oldTableName" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="newTableName" type="xsd:string"
+                       use="required" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="renameViewAttributes">
+        <xsd:attribute name="catalogName" type="xsd:string" />
+        <xsd:attribute name="schemaName" type="xsd:string" />
+        <xsd:attribute name="oldViewName" type="xsd:string" use="required" />
+        <xsd:attribute name="newViewName" type="xsd:string" use="required" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="renameColumnAttributes">
+        <xsd:attributeGroup ref="tableNameAttribute" />
+        <xsd:attribute name="oldColumnName" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="newColumnName" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="columnDataType" type="xsd:string" />
+        <xsd:attribute name="remarks" type="xsd:string" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="dropColumnAttributes">
+        <xsd:attributeGroup ref="tableNameAttribute" />
+        <xsd:attribute name="columnName" type="xsd:string" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="sequenceAttributes">
+        <xsd:attribute name="catalogName" type="xsd:string" />
+        <xsd:attribute name="schemaName" type="xsd:string" />
+        <xsd:attribute name="sequenceName" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="startValue" type="xsd:string" />
+        <xsd:attribute name="incrementBy" type="xsd:string" />
+        <xsd:attribute name="maxValue" type="xsd:string" />
+        <xsd:attribute name="minValue" type="xsd:string" />
+        <xsd:attribute name="ordered" type="booleanExp" />
+        <xsd:attribute name="cacheSize" type="xsd:nonNegativeInteger" />
+        <xsd:attribute name="cycle" type="booleanExp">
+            <xsd:annotation>
+                <xsd:documentation>
+                    true for a cycling sequence, false for a non-cycling sequence.
+                    Default is false.
+                </xsd:documentation>
+            </xsd:annotation>
+        </xsd:attribute>
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="renameSequenceAttributes">
+        <xsd:attribute name="catalogName" type="xsd:string" />
+        <xsd:attribute name="schemaName" type="xsd:string" />
+        <xsd:attribute name="oldSequenceName" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="newSequenceName" type="xsd:string"
+                       use="required" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="indexName">
+        <xsd:attribute name="indexName" type="xsd:string" use="required" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="createIndex">
+        <xsd:attributeGroup ref="tableNameAttribute" />
+        <xsd:attributeGroup ref="indexName" />
+        <xsd:attribute name="associatedWith" type="xsd:string" use="optional" />
+        <xsd:attribute name="unique" type="booleanExp" />
+        <xsd:attribute name="clustered" type="booleanExp" />
+        <xsd:attribute name="tablespace" type="xsd:string" />
+    </xsd:attributeGroup>
+
+
+    <xsd:element name="addPrimaryKey">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="columnNames" type="xsd:string"
+                           use="required" />
+            <xsd:attribute name="constraintName" type="xsd:string" />
+            <xsd:attribute name="tablespace" type="xsd:string" />
+            <xsd:attribute name="clustered" type="booleanExp" />
+            <xsd:attribute name="forIndexCatalogName" type="xsd:string" />
+            <xsd:attribute name="forIndexSchemaName" type="xsd:string" />
+            <xsd:attribute name="forIndexName" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropPrimaryKey">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="constraintName" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="addUniqueConstraint">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="columnNames" type="xsd:string"
+                           use="required" />
+            <xsd:attribute name="constraintName" type="xsd:string" />
+            <xsd:attribute name="tablespace" type="xsd:string" />
+            <xsd:attribute name="disabled" type="booleanExp" />
+            <xsd:attribute name="deferrable" type="booleanExp" />
+            <xsd:attribute name="initiallyDeferred" type="booleanExp" />
+            <xsd:attribute name="forIndexCatalogName" type="xsd:string" />
+            <xsd:attribute name="forIndexSchemaName" type="xsd:string" />
+            <xsd:attribute name="forIndexName" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropUniqueConstraint">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="constraintName" type="xsd:string" />
+            <xsd:attribute name="uniqueColumns" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="modifyDataType">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="columnName" type="xsd:string" use="required" />
+            <xsd:attribute name="newDataType" type="xsd:string" use="required" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="addLookupTable">
+        <xsd:complexType>
+            <xsd:attribute name="existingTableCatalogName" type="xsd:string" />
+            <xsd:attribute name="existingTableSchemaName" type="xsd:string" />
+            <xsd:attribute name="existingTableName" type="xsd:string"
+                           use="required" />
+            <xsd:attribute name="existingColumnName" type="xsd:string"
+                           use="required" />
+            <xsd:attribute name="newTableCatalogName" type="xsd:string" />
+            <xsd:attribute name="newTableSchemaName" type="xsd:string" />
+            <xsd:attribute name="newTableName" type="xsd:string"
+                           use="required" />
+            <xsd:attribute name="newColumnName" type="xsd:string"
+                           use="required" />
+            <xsd:attribute name="newColumnDataType" type="xsd:string" />
+            <xsd:attribute name="constraintName" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="addAutoIncrement">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="columnName" type="xsd:string" use="required" />
+            <xsd:attribute name="columnDataType" type="xsd:string" />
+            <xsd:attribute name="startWith" type="xsd:long" />
+            <xsd:attribute name="incrementBy" type="xsd:long" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="addDefaultValue">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="columnName" type="xsd:string" use="required" />
+            <xsd:attribute name="columnDataType" type="xsd:string" />
+            <xsd:attribute name="defaultValue" type="xsd:string" />
+            <xsd:attribute name="defaultValueNumeric" type="xsd:string" />
+            <xsd:attribute name="defaultValueDate" type="xsd:string" />
+            <xsd:attribute name="defaultValueBoolean" type="xsd:string" />
+            <xsd:attribute name="defaultValueComputed" type="xsd:string" />
+            <xsd:attribute name="defaultValueSequenceNext" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropDefaultValue">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="columnName" type="xsd:string" use="required" />
+            <xsd:attribute name="columnDataType" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="loadData">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element name="column" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:attribute name="index" type="integerExp" />
+                        <xsd:attribute name="header" type="xsd:string" />
+                        <xsd:attribute name="name" type="xsd:string" />
+                        <xsd:attribute name="type" type="xsd:string" />
+                        <xsd:attribute name="defaultValue" type="xsd:string" />
+                        <xsd:attribute name="defaultValueNumeric" type="xsd:string" />
+                        <xsd:attribute name="defaultValueDate" type="xsd:string" />
+                        <xsd:attribute name="defaultValueBoolean" type="booleanExp" />
+                        <xsd:attribute name="defaultValueComputed" type="xsd:string" />
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="file" type="xsd:string" />
+            <xsd:attribute name="relativeToChangelogFile" type="booleanExp" />
+            <xsd:attribute name="encoding" type="xsd:string" default="UTF-8"/>
+            <xsd:attribute name="separator" type="xsd:string" default=","/>
+            <xsd:attribute name="quotchar" type="xsd:string" default="&quot;"/>
+            <xsd:attribute name="commentLineStartsWith" type="xsd:string" default="#" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="loadUpdateData">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element name="column" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:attribute name="index" type="integerExp" />
+                        <xsd:attribute name="header" type="xsd:string" />
+                        <xsd:attribute name="name" type="xsd:string" />
+                        <xsd:attribute name="type" type="xsd:string" />
+                        <xsd:attribute name="defaultValue" type="xsd:string" />
+                        <xsd:attribute name="defaultValueNumeric" type="xsd:string" />
+                        <xsd:attribute name="defaultValueDate" type="xsd:string" />
+                        <xsd:attribute name="defaultValueBoolean" type="booleanExp" />
+                        <xsd:attribute name="defaultValueComputed" type="xsd:string" />
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="file" type="xsd:string" />
+            <xsd:attribute name="relativeToChangelogFile" type="booleanExp" />
+            <xsd:attribute name="encoding" type="xsd:string" default="UTF-8"/>
+            <xsd:attribute name="primaryKey" type="xsd:string" use="required" />
+            <xsd:attribute name="onlyUpdate" type="xsd:boolean" default="false" />
+            <xsd:attribute name="separator" type="xsd:string" default=","/>
+            <xsd:attribute name="quotchar" type="xsd:string" default="&quot;"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:simpleType name="fkCascadeActionOptions">
+        <xsd:restriction base="xsd:token">
+            <xsd:enumeration value="CASCADE"></xsd:enumeration>
+            <xsd:enumeration value="SET NULL"></xsd:enumeration>
+            <xsd:enumeration value="SET DEFAULT"></xsd:enumeration>
+            <xsd:enumeration value="RESTRICT"></xsd:enumeration>
+            <xsd:enumeration value="NO ACTION"></xsd:enumeration>
+        </xsd:restriction>
+    </xsd:simpleType>
+
+    <xsd:attributeGroup name="addForeignKeyConstraintAttrib">
+        <xsd:attribute name="baseTableCatalogName" type="xsd:string" />
+        <xsd:attribute name="baseTableSchemaName" type="xsd:string" />
+        <xsd:attribute name="baseTableName" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="baseColumnNames" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="constraintName" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="referencedTableCatalogName" type="xsd:string" />
+        <xsd:attribute name="referencedTableSchemaName" type="xsd:string" />
+        <xsd:attribute name="referencedTableName" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="referencedColumnNames" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="deferrable" type="booleanExp" />
+        <xsd:attribute name="initiallyDeferred" type="booleanExp" />
+        <xsd:attribute name="deleteCascade" type="booleanExp" />
+        <xsd:attribute name="onDelete" type="fkCascadeActionOptions" />
+        <xsd:attribute name="onUpdate" type="fkCascadeActionOptions" />
+        <xsd:attribute name="referencesUniqueColumn" type="booleanExp" />
+    </xsd:attributeGroup>
+
+    <xsd:attributeGroup name="addNotNullConstraintAttrib">
+        <xsd:attributeGroup ref="tableNameAttribute" />
+        <xsd:attribute name="columnName" type="xsd:string" use="required" />
+        <xsd:attribute name="defaultNullValue" type="xsd:string" />
+        <xsd:attribute name="columnDataType" type="xsd:string" />
+        <xsd:attribute name="constraintName" type="xsd:string"/>
+    </xsd:attributeGroup>
+
+
+    <xsd:element name="addNotNullConstraint">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="addNotNullConstraintAttrib" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="addForeignKeyConstraint">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="addForeignKeyConstraintAttrib" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:attributeGroup name="dbmsAttrib">
+        <xsd:attribute name="type" type="xsd:string" use="required" />
+    </xsd:attributeGroup>
+
+    <xsd:element name="dbms">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="dbmsAttrib" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="changeSetExecuted">
+        <xsd:complexType>
+            <xsd:attribute name="id" type="xsd:string" use="required" />
+            <xsd:attribute name="author" type="xsd:string" use="required" />
+            <xsd:attribute name="changeLogFile" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="tableExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="tableName" type="xsd:string" use="required" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="columnExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="tableName" type="xsd:string" use="required" />
+            <xsd:attribute name="columnName" type="xsd:string" use="required" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="sequenceExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="sequenceName" type="xsd:string"
+                           use="required" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="foreignKeyConstraintExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="foreignKeyTableName" type="xsd:string" />
+            <xsd:attribute name="foreignKeyName" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="indexExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="indexName" type="xsd:string"/>
+            <xsd:attribute name="tableName" type="xsd:string" />
+            <xsd:attribute name="columnNames" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="rowCount">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="tableName" type="xsd:string" />
+            <xsd:attribute name="expectedRows" type="xsd:int" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="tableIsEmpty">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="tableName" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="changeLogPropertyDefined">
+        <xsd:complexType>
+            <xsd:attribute name="property" type="xsd:string" use="required" />
+            <xsd:attribute name="value" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="primaryKeyExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="primaryKeyName" type="xsd:string" />
+            <xsd:attribute name="tableName" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="viewExists">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="viewName" type="xsd:string" use="required" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="sqlCheck">
+        <xsd:complexType mixed="true">
+            <xsd:attribute name="expectedResult" type="xsd:string"
+                           use="required" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="customPrecondition">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="param" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:attribute name="name" type="xsd:string" use="required" />
+                        <xsd:attribute name="value" type="xsd:string" use="required" />
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attribute name="className" type="xsd:string" use="required" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="and">
+        <xsd:complexType>
+            <xsd:choice>
+                <xsd:group ref="PreConditionChildren" minOccurs="1"
+                           maxOccurs="unbounded" />
+            </xsd:choice>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="or">
+        <xsd:complexType>
+            <xsd:choice>
+                <xsd:group ref="PreConditionChildren" minOccurs="1"
+                           maxOccurs="unbounded" />
+            </xsd:choice>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="not">
+        <xsd:complexType>
+            <xsd:choice>
+                <xsd:group ref="PreConditionChildren" minOccurs="1"
+                           maxOccurs="unbounded" />
+            </xsd:choice>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:attributeGroup name="runningAsAttrib">
+        <xsd:attribute name="username" type="xsd:string" use="required" />
+    </xsd:attributeGroup>
+
+    <xsd:element name="runningAs">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="runningAsAttrib" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:attributeGroup name="objectQuotingStrategyAttrib">
+        <xsd:attribute name="strategy" type="xsd:string" use="required" />
+    </xsd:attributeGroup>
+
+    <xsd:element name="expectedQuotingStrategy">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="objectQuotingStrategyAttrib" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:attributeGroup name="dropForeignKeyConstraintAttrib">
+        <xsd:attribute name="baseTableCatalogName" type="xsd:string" />
+        <xsd:attribute name="baseTableSchemaName" type="xsd:string" />
+        <xsd:attribute name="baseTableName" type="xsd:string"
+                       use="required" />
+        <xsd:attribute name="constraintName" type="xsd:string" />
+    </xsd:attributeGroup>
+
+    <xsd:element name="dropForeignKeyConstraint">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="dropForeignKeyConstraintAttrib" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:attributeGroup name="dropAllForeignKeyConstraintsAttrib">
+        <xsd:attribute name="baseTableCatalogName" type="xsd:string" />
+        <xsd:attribute name="baseTableSchemaName" type="xsd:string" />
+        <xsd:attribute name="baseTableName" type="xsd:string"
+                       use="required" />
+    </xsd:attributeGroup>
+
+    <xsd:element name="dropAllForeignKeyConstraints">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="dropAllForeignKeyConstraintsAttrib" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropNotNullConstraint">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="tableName" type="xsd:string" use="required" />
+            <xsd:attribute name="columnName" type="xsd:string" use="required" />
+            <xsd:attribute name="columnDataType" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="setTableRemarks">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="tableName" type="xsd:string" use="required" />
+            <xsd:attribute name="remarks" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="setColumnRemarks">
+        <xsd:complexType>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="tableName" type="xsd:string" use="required" />
+            <xsd:attribute name="columnName" type="xsd:string" use="required" />
+            <xsd:attribute name="remarks" type="xsd:string"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="constraints">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="constraintsAttributes" />
+        </xsd:complexType>
+    </xsd:element>
+
+
+    <xsd:element name="column">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element ref="constraints" minOccurs="0" />
+            </xsd:sequence>
+            <xsd:attributeGroup ref="column" />
+            <xsd:anyAttribute namespace="##other" processContents="lax" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="param">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="param" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- Children for createTable -->
+    <xsd:element name="createTable">
+        <xsd:complexType>
+            <xsd:choice maxOccurs="unbounded">
+                <xsd:element ref="column" minOccurs="1" maxOccurs="unbounded" />
+                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
+            </xsd:choice>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="tablespace" type="xsd:string" />
+            <xsd:attribute name="remarks" type="xsd:string" />
+            <xsd:anyAttribute namespace="##other" processContents="lax"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- Children for createView -->
+    <xsd:element name="createView">
+        <xsd:complexType>
+            <xsd:simpleContent>
+                <xsd:extension base="xsd:string">
+                    <xsd:attribute name="catalogName" type="xsd:string" />
+                    <xsd:attribute name="schemaName" type="xsd:string" />
+                    <xsd:attribute name="viewName" type="xsd:string" use="required" />
+                    <xsd:attribute name="replaceIfExists" type="booleanExp" />
+                    <xsd:attribute name="fullDefinition" type="booleanExp" />
+                </xsd:extension>
+            </xsd:simpleContent>
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- Children for insert -->
+    <xsd:element name="insert">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element ref="column" maxOccurs="unbounded" />
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="dbms" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="update">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element ref="column" minOccurs="1" maxOccurs="unbounded" />
+                <xsd:element name="where" minOccurs="0" maxOccurs="1"/>
+                <xsd:element ref="whereParams" minOccurs="0" maxOccurs="1" />
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="whereParams">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element ref="param" minOccurs="1" maxOccurs="unbounded" />
+            </xsd:sequence>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="delete">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element name="where" minOccurs="0" maxOccurs="1" />
+                <xsd:element ref="whereParams" minOccurs="0" maxOccurs="1" />
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- Children for addColum -->
+    <xsd:element name="addColumn">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="column" minOccurs="1" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:complexContent mixed="true">
+                            <xsd:extension base="columnType">
+                                <xsd:attribute name="beforeColumn" type="xsd:string" />
+                                <xsd:attribute name="afterColumn" type="xsd:string" />
+                                <xsd:attribute name="position" type="xsd:integer" />
+                            </xsd:extension>
+                        </xsd:complexContent>
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="rollback">
+        <xsd:complexType mixed="true">
+            <xsd:choice>
+                <xsd:group ref="changeSetChildren" minOccurs="0"
+                           maxOccurs="unbounded" />
+            </xsd:choice>
+            <xsd:attribute name="changeSetPath" type="xsd:string" />
+            <xsd:attribute name="changeSetAuthor" type="xsd:string" />
+            <xsd:attribute name="changeSetId" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- comment  -->
+    <xsd:element name="comment" type="xsd:string" />
+
+    <!-- sql -->
+    <xsd:element name="sql">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element ref="comment" minOccurs="0" maxOccurs="1" />
+            </xsd:sequence>
+            <xsd:attribute name="stripComments" type="booleanExp" />
+            <xsd:attribute name="splitStatements" type="booleanExp" />
+            <xsd:attribute name="endDelimiter" type="xsd:string" />
+            <xsd:attribute name="dbms" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="createProcedure">
+        <xsd:complexType mixed="true">
+            <xsd:sequence>
+                <xsd:element ref="comment" minOccurs="0" maxOccurs="1" />
+            </xsd:sequence>
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+            <xsd:attribute name="procedureName" type="xsd:string" />
+            <xsd:attribute name="path" type="xsd:string" />
+            <xsd:attribute name="encoding" type="xsd:string" />
+            <xsd:attribute name="relativeToChangelogFile" type="booleanExp" />
+            <xsd:attribute name="dbms" type="xsd:string" />
+            <xsd:attribute name="replaceIfExists" type="xsd:boolean" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="executeCommand">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="arg" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType>
+                        <xsd:attribute name="value" type="xsd:string" use="required" />
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attribute name="executable" type="xsd:string" use="required" />
+            <xsd:attribute name="os" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="sqlFile">
+        <xsd:complexType>
+            <xsd:attribute name="path" type="xsd:string" use="required" />
+            <xsd:attribute name="stripComments" type="booleanExp" />
+            <xsd:attribute name="splitStatements" type="booleanExp" />
+            <xsd:attribute name="encoding" type="xsd:string" default="UTF-8"/>
+            <xsd:attribute name="endDelimiter" type="xsd:string" />
+            <xsd:attribute name="relativeToChangelogFile" type="booleanExp" />
+            <xsd:attribute name="dbms" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="tagDatabase">
+        <xsd:complexType>
+            <xsd:attribute name="tag" type="xsd:string" use="required" />
+            <xsd:anyAttribute namespace="##other"  processContents="lax"/>
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="stop">
+        <xsd:complexType mixed="true" />
+    </xsd:element>
+
+    <xsd:element name="empty"/>
+
+    <xsd:element name="output">
+        <xsd:complexType mixed="true" >
+            <xsd:attribute name="target" type="xsd:string" />
+        </xsd:complexType>
+
+    </xsd:element>
+
+    <!-- renameTable -->
+    <xsd:element name="renameTable">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="renameTableAttributes" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="renameView">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="renameViewAttributes" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- dropTable -->
+    <xsd:element name="dropTable">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="dropTableAttributes" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropView">
+        <xsd:complexType>
+            <xsd:attribute name="viewName" type="xsd:string" use="required" />
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropProcedure">
+        <xsd:complexType>
+            <xsd:attribute name="procedureName" type="xsd:string" use="required" />
+            <xsd:attribute name="catalogName" type="xsd:string" />
+            <xsd:attribute name="schemaName" type="xsd:string" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <!-- renameColumn -->
+    <xsd:element name="renameColumn">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="renameColumnAttributes" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropColumn">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="column" minOccurs="0" maxOccurs="unbounded" type="columnType" />
+            </xsd:sequence>
+            <xsd:attributeGroup ref="dropColumnAttributes" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="mergeColumns">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attribute name="column1Name" type="xsd:string"
+                           use="required" />
+            <xsd:attribute name="joinString" type="xsd:string" use="required" />
+            <xsd:attribute name="column2Name" type="xsd:string"
+                           use="required" />
+            <xsd:attribute name="finalColumnName" type="xsd:string"
+                           use="required" />
+            <xsd:attribute name="finalColumnType" type="xsd:string"
+                           use="required" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="createSequence">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="sequenceAttributes" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="alterSequence">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="sequenceAttributes" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropSequence">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="sequenceAttributes" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="renameSequence">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="renameSequenceAttributes" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="createIndex">
+        <xsd:complexType>
+            <xsd:choice maxOccurs="unbounded">
+                <xsd:element ref="column" maxOccurs="unbounded" />
+                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
+            </xsd:choice>
+            <xsd:attributeGroup ref="createIndex" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="dropIndex">
+        <xsd:complexType>
+            <xsd:attributeGroup ref="tableNameAttribute" />
+            <xsd:attributeGroup ref="indexName" />
+            <xsd:attribute name="associatedWith" type="xsd:string" use="optional" />
+        </xsd:complexType>
+    </xsd:element>
+
+    <xsd:element name="customChange">
+        <xsd:complexType>
+            <xsd:sequence>
+                <xsd:element name="param" minOccurs="0" maxOccurs="unbounded">
+                    <xsd:complexType mixed="true">
+                        <xsd:attribute name="name" type="xsd:string" use="required" />
+                        <xsd:attribute name="value" type="xsd:string" />
+                    </xsd:complexType>
+                </xsd:element>
+            </xsd:sequence>
+            <xsd:attribute name="class" type="xsd:string" use="required" />
+            <xsd:anyAttribute processContents="lax" />
+        </xsd:complexType>
+    </xsd:element>
+
+
+    <!-- Children for changeSet -->
+    <xsd:group name="changeSetChildren">
+        <xsd:choice>
+            <xsd:element ref="comment" maxOccurs="1" />
+            <xsd:element ref="createTable" maxOccurs="unbounded" />
+            <xsd:element ref="dropTable" maxOccurs="unbounded" />
+            <xsd:element ref="createView" maxOccurs="unbounded" />
+            <xsd:element ref="renameView" maxOccurs="unbounded" />
+            <xsd:element ref="dropView" maxOccurs="unbounded" />
+            <xsd:element ref="insert" maxOccurs="unbounded" />
+            <xsd:element ref="addColumn" maxOccurs="unbounded" />
+            <xsd:element ref="sql" maxOccurs="unbounded" />
+            <xsd:element ref="createProcedure" maxOccurs="unbounded" />
+            <xsd:element ref="dropProcedure" maxOccurs="unbounded" />
+            <xsd:element ref="sqlFile" maxOccurs="unbounded" />
+            <xsd:element ref="renameTable" maxOccurs="unbounded" />
+            <xsd:element ref="renameColumn" maxOccurs="unbounded" />
+            <xsd:element ref="dropColumn" maxOccurs="unbounded" />
+            <xsd:element ref="mergeColumns" maxOccurs="unbounded" />
+            <xsd:element ref="modifyDataType" maxOccurs="unbounded" />
+            <xsd:element ref="createSequence" maxOccurs="unbounded" />
+            <xsd:element ref="alterSequence" maxOccurs="unbounded" />
+            <xsd:element ref="dropSequence" maxOccurs="unbounded" />
+            <xsd:element ref="renameSequence" maxOccurs="unbounded" />
+            <xsd:element ref="createIndex" maxOccurs="unbounded" />
+            <xsd:element ref="dropIndex" maxOccurs="unbounded" />
+            <xsd:element ref="addNotNullConstraint" maxOccurs="unbounded" />
+            <xsd:element ref="dropNotNullConstraint" maxOccurs="unbounded" />
+            <xsd:element ref="addForeignKeyConstraint" maxOccurs="unbounded" />
+            <xsd:element ref="dropForeignKeyConstraint" maxOccurs="unbounded" />
+            <xsd:element ref="dropAllForeignKeyConstraints"
+                         maxOccurs="unbounded" />
+            <xsd:element ref="addPrimaryKey" maxOccurs="unbounded" />
+            <xsd:element ref="dropPrimaryKey" maxOccurs="unbounded" />
+            <xsd:element ref="addLookupTable" maxOccurs="unbounded" />
+            <xsd:element ref="addAutoIncrement" maxOccurs="unbounded" />
+            <xsd:element ref="addDefaultValue" maxOccurs="unbounded" />
+            <xsd:element ref="dropDefaultValue" maxOccurs="unbounded" />
+            <xsd:element ref="addUniqueConstraint" maxOccurs="unbounded" />
+            <xsd:element ref="dropUniqueConstraint" maxOccurs="unbounded" />
+            <xsd:element ref="setTableRemarks" maxOccurs="unbounded" />
+            <xsd:element ref="setColumnRemarks" maxOccurs="unbounded" />
+            <xsd:element ref="customChange" maxOccurs="unbounded" />
+            <xsd:element ref="update" maxOccurs="unbounded" />
+            <xsd:element ref="delete" maxOccurs="unbounded" />
+            <xsd:element ref="loadData" maxOccurs="unbounded" />
+            <xsd:element ref="loadUpdateData" maxOccurs="unbounded" />
+            <xsd:element ref="executeCommand" maxOccurs="unbounded" />
+            <xsd:element ref="stop" maxOccurs="unbounded" />
+            <xsd:element ref="output" maxOccurs="unbounded" />
+            <xsd:element ref="empty" maxOccurs="unbounded" />
+            <xsd:element ref="rollback" maxOccurs="1" />
+            <xsd:any namespace="##other" processContents="lax" minOccurs="0"
+                     maxOccurs="unbounded" />
+        </xsd:choice>
+    </xsd:group>
+
+    <!-- Children for Precondition -->
+    <xsd:group name="PreConditionChildren">
+        <xsd:sequence>
+            <xsd:choice>
+                <xsd:element ref="and" maxOccurs="unbounded" />
+                <xsd:element ref="or" maxOccurs="unbounded" />
+                <xsd:element ref="not" maxOccurs="unbounded" />
+                <xsd:element ref="dbms" maxOccurs="unbounded" />
+                <xsd:element ref="runningAs" maxOccurs="unbounded" />
+                <xsd:element ref="changeSetExecuted" maxOccurs="unbounded" />
+                <xsd:element ref="tableExists" maxOccurs="unbounded" />
+                <xsd:element ref="columnExists" maxOccurs="unbounded" />
+                <xsd:element ref="sequenceExists" maxOccurs="unbounded" />
+                <xsd:element ref="foreignKeyConstraintExists" maxOccurs="unbounded" />
+                <xsd:element ref="indexExists" maxOccurs="unbounded" />
+                <xsd:element ref="primaryKeyExists" maxOccurs="unbounded" />
+                <xsd:element ref="viewExists" maxOccurs="unbounded" />
+                <xsd:element ref="tableIsEmpty" maxOccurs="unbounded" />
+                <xsd:element ref="rowCount" maxOccurs="unbounded" />
+                <xsd:element ref="sqlCheck" maxOccurs="unbounded" />
+                <xsd:element ref="changeLogPropertyDefined" maxOccurs="unbounded" />
+                <xsd:element ref="expectedQuotingStrategy" maxOccurs="unbounded" />
+                <xsd:element ref="customPrecondition" maxOccurs="unbounded" />
+                <xsd:any namespace="##other" processContents="lax" minOccurs="0"
+                         maxOccurs="unbounded" />
+            </xsd:choice>
+        </xsd:sequence>
+
+    </xsd:group>
+</xsd:schema>
diff --git a/private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd b/private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd
new file mode 100644
index 0000000..72c12f3
--- /dev/null
+++ b/private/cache/retriever/www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
+            targetNamespace="http://www.liquibase.org/xml/ns/dbchangelog-ext"
+            xmlns="http://www.liquibase.org/xml/ns/dbchangelog-ext"
+            elementFormDefault="qualified">
+</xsd:schema>
\ No newline at end of file
diff --git a/src/main/java/com/crossover/techtrial/controller/PanelController.java b/src/main/java/com/crossover/techtrial/controller/PanelController.java
index 71f12b2..da50d84 100644
--- a/src/main/java/com/crossover/techtrial/controller/PanelController.java
+++ b/src/main/java/com/crossover/techtrial/controller/PanelController.java
@@ -2,8 +2,11 @@ package com.crossover.techtrial.controller;
 
 import com.crossover.techtrial.dto.DailyElectricity;
 import com.crossover.techtrial.model.HourlyElectricity;
+import com.crossover.techtrial.model.DailyElectricityModel;
 import com.crossover.techtrial.model.Panel;
 import com.crossover.techtrial.service.HourlyElectricityService;
+import com.crossover.techtrial.service.DailyElectricityService;
+
 import com.crossover.techtrial.service.PanelService;
 import java.util.ArrayList;
 import java.util.List;
@@ -12,6 +15,7 @@ import org.springframework.data.domain.Page;
 import org.springframework.data.domain.Pageable;
 import org.springframework.data.web.PageableDefault;
 import org.springframework.http.ResponseEntity;
+import com.crossover.techtrial.dto.PageExtender;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.PostMapping;
@@ -33,6 +37,9 @@ public class PanelController {
   @Autowired
   HourlyElectricityService hourlyElectricityService;
   
+  @Autowired
+  DailyElectricityService dailyElectricityService;
+  
   /**
    * Register a Panel to System and start receiving the electricity statistics.
    * @param panel to register.
@@ -72,7 +79,13 @@ public class PanelController {
     }
     Page<HourlyElectricity> page = hourlyElectricityService.getAllHourlyElectricityByPanelId(
         panel.getId(), pageable);
-    return ResponseEntity.ok(page);
+   
+
+    PageExtender<HourlyElectricity> respage=  new PageExtender();
+    respage.setContent(page.getContent());
+   
+    
+    return ResponseEntity.ok(page.getContent());
   }
   
   /**
@@ -90,6 +103,20 @@ public class PanelController {
      * IMPLEMENT THE LOGIC HERE and FEEL FREE TO MODIFY OR ADD CODE TO RELATED CLASSES.
      * MAKE SURE NOT TO CHANGE THE SIGNATURE OF ANY END POINT. NO PAGINATION IS NEEDED HERE.
      */
+    
+     Panel panel = panelService.findBySerial(panelSerial);
+    if (panel == null) {
+      return ResponseEntity.notFound().build(); 
+    }
+    Page<DailyElectricityModel> page = dailyElectricityService.findAllByPanelId(
+        panel.getId());
+   
+
+   List<DailyElectricityModel> respage=  page.getContent();
+    
+   respage.forEach(x -> dailyElectricityForPanel.add(DailyElectricity.valueOf(x.toString())));
+    
+    
     return ResponseEntity.ok(dailyElectricityForPanel);
   }
 }
\ No newline at end of file
diff --git a/src/main/java/com/crossover/techtrial/dto/DailyElectricity.java b/src/main/java/com/crossover/techtrial/dto/DailyElectricity.java
index 153e5a8..8b1043b 100644
--- a/src/main/java/com/crossover/techtrial/dto/DailyElectricity.java
+++ b/src/main/java/com/crossover/techtrial/dto/DailyElectricity.java
@@ -23,6 +23,11 @@ public class DailyElectricity implements Serializable {
   
   private Long max;
 
+    public DailyElectricity(String values) {
+        //this.date = date;
+        //Object to be constructed from MOdel to String
+    }
+
   public LocalDate getDate() {
     return date;
   }
@@ -69,4 +74,9 @@ public class DailyElectricity implements Serializable {
         + average + ", min=" + min + ", max=" + max + "]";
   }
 
+  public static DailyElectricity valueOf(String values){
+      return new DailyElectricity(values);
+  }
+  
+  
 }
diff --git a/src/main/java/com/crossover/techtrial/dto/PageExtender.java b/src/main/java/com/crossover/techtrial/dto/PageExtender.java
new file mode 100644
index 0000000..0b56b78
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/dto/PageExtender.java
@@ -0,0 +1,61 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package com.crossover.techtrial.dto;
+
+
+import org.springframework.data.domain.PageImpl;
+import java.util.ArrayList;
+import java.util.List;
+/**
+ *
+ * @author sbindumadhavan
+ */
+public class PageExtender<T> extends PageImpl<T> {
+    
+    List<T> content = new ArrayList<T>();
+    public PageExtender(){
+        super(new ArrayList<>());
+    }
+    
+    @Override
+    public List<T> getContent() {
+        return content;
+    }
+
+    public void setContent(List<T> content) {
+        //super.setContent(content);
+        this.content = content;
+    }
+
+    public int hashCode() {
+        int hash = 7;
+        return hash;
+    }
+
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        final PageExtender<?> other = (PageExtender<?>) obj;
+        if (this.content != other.content && (this.content == null || !this.content.equals(other.content))) {
+            return false;
+        }
+        return true;
+    }
+
+    public String toString() {
+       
+        return "PageExtender{" + "content=" + content + '}';
+    }
+
+    
+}
diff --git a/src/main/java/com/crossover/techtrial/exceptions/GlobalExceptionHandler.java b/src/main/java/com/crossover/techtrial/exceptions/GlobalExceptionHandler.java
old mode 100755
new mode 100644
diff --git a/src/main/java/com/crossover/techtrial/model/DailyElectricityModel.java b/src/main/java/com/crossover/techtrial/model/DailyElectricityModel.java
new file mode 100644
index 0000000..4a80521
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/model/DailyElectricityModel.java
@@ -0,0 +1,142 @@
+package com.crossover.techtrial.model;
+
+import java.io.Serializable;
+import java.time.LocalDateTime;
+import javax.persistence.Column;
+import javax.persistence.Entity;
+import javax.persistence.GeneratedValue;
+import javax.persistence.GenerationType;
+import javax.persistence.Id;
+
+import javax.persistence.Table;
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import javax.persistence.JoinColumn;
+import javax.persistence.ManyToOne;
+import javax.persistence.Table;
+
+
+/**
+ * HourlyElectricity is responsible for electricity generated by a Panel in an hour.
+ * 
+ * @author Crossover
+ *
+ */
+
+@Entity
+@Table(name = "daily_electricity")
+public class DailyElectricityModel implements Serializable {
+
+  private static final long serialVersionUID = -575347909928592140L;
+  
+  @Id
+  @GeneratedValue(strategy = GenerationType.IDENTITY)
+  Long id;
+  
+  
+  @JsonIgnore
+  @ManyToOne
+  @JoinColumn(name = "panel_id", referencedColumnName = "id")
+  Panel panel;
+  
+  @Column(name = "localday")
+  LocalDateTime localday;
+  
+  @Column(name = "sum")
+  Long sum;
+
+  @Column(name = "average")
+  Long average;
+  @Column(name = "min")
+  Long min;
+  @Column(name = "max")
+  Long max;
+  
+  public Long getId() {
+    return id;
+  }
+
+  public void setId(Long id) {
+    this.id = id;
+  }
+ public Panel getPanel() {
+    return panel;
+  }
+
+  public void setPanel(Panel panel) {
+    this.panel = panel;
+  }
+    public LocalDateTime getLocalday() {
+        return localday;
+    }
+
+    public void setLocalday(LocalDateTime localday) {
+        this.localday = localday;
+    }
+
+    public Long getSum() {
+        return sum;
+    }
+
+    public void setSum(Long sum) {
+        this.sum = sum;
+    }
+
+    public Long getAverage() {
+        return average;
+    }
+
+    public void setAverage(Long average) {
+        this.average = average;
+    }
+
+    public Long getMin() {
+        return min;
+    }
+
+    public void setMin(Long min) {
+        this.min = min;
+    }
+
+    public Long getMax() {
+        return max;
+    }
+
+    public void setMax(Long max) {
+        this.max = max;
+    }
+
+    public int hashCode() {
+        int hash = 7;
+        hash = 17 * hash + (this.id != null ? this.id.hashCode() : 0);
+        hash = 17 * hash + (this.localday != null ? this.localday.hashCode() : 0);
+        return hash;
+    }
+
+    public boolean equals(Object obj) {
+        if (this == obj) {
+            return true;
+        }
+        if (obj == null) {
+            return false;
+        }
+        if (getClass() != obj.getClass()) {
+            return false;
+        }
+        final DailyElectricityModel other = (DailyElectricityModel) obj;
+        if (this.id != other.id && (this.id == null || !this.id.equals(other.id))) {
+            return false;
+        }
+        if (this.localday != other.localday && (this.localday == null || !this.localday.equals(other.localday))) {
+            return false;
+        }
+        return true;
+    }
+
+    public String toString() {
+        return "DailyElectricity{" + "id=" + id + ", localday=" + localday + ", sum=" + sum + ", average=" + average + ", min=" + min + ", max=" + max + '}';
+    }
+
+  
+  
+  
+}
diff --git a/src/main/java/com/crossover/techtrial/repository/DailyElectricityRepository.java b/src/main/java/com/crossover/techtrial/repository/DailyElectricityRepository.java
new file mode 100644
index 0000000..3756bb0
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/repository/DailyElectricityRepository.java
@@ -0,0 +1,18 @@
+package com.crossover.techtrial.repository;
+
+import com.crossover.techtrial.model.DailyElectricityModel;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.repository.PagingAndSortingRepository;
+import org.springframework.data.rest.core.annotation.RestResource;
+import java.time.LocalDateTime;
+
+/**
+ * HourlyElectricity Repository is for all operations for HourlyElectricity.
+ * @author Crossover
+ */
+@RestResource(exported = false)
+public interface DailyElectricityRepository 
+    extends PagingAndSortingRepository<DailyElectricityModel,Long> {
+  Page<DailyElectricityModel> findAllByPanelId(Long panelId,Pageable pageable);
+}
diff --git a/src/main/java/com/crossover/techtrial/service/DailyElectricityService.java b/src/main/java/com/crossover/techtrial/service/DailyElectricityService.java
new file mode 100644
index 0000000..747cc44
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/service/DailyElectricityService.java
@@ -0,0 +1,17 @@
+package com.crossover.techtrial.service;
+
+import com.crossover.techtrial.model.DailyElectricityModel;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+import java.time.LocalDateTime;
+
+/**
+ * HourlyElectricityService interface for all services realted to HourlyElectricity.
+ * @author Crossover
+ *
+ */
+public interface DailyElectricityService {
+  DailyElectricityModel save(DailyElectricityModel dailyElectricity);
+  
+  Page<DailyElectricityModel> findAllByPanelId(Long panelId);
+}
diff --git a/src/main/java/com/crossover/techtrial/service/DailyElectricityServiceImpl.java b/src/main/java/com/crossover/techtrial/service/DailyElectricityServiceImpl.java
new file mode 100644
index 0000000..4075318
--- /dev/null
+++ b/src/main/java/com/crossover/techtrial/service/DailyElectricityServiceImpl.java
@@ -0,0 +1,34 @@
+package com.crossover.techtrial.service;
+
+import com.crossover.techtrial.model.DailyElectricityModel;
+import com.crossover.techtrial.repository.DailyElectricityRepository;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.domain.Pageable;
+import org.springframework.stereotype.Service;
+
+/**
+ * HourlyElectricityServiceImpl will handle electricity generated by a Panel.
+ *
+ * @author Crossover
+ *
+ */
+
+@Service
+public class DailyElectricityServiceImpl implements DailyElectricityService {
+  @Autowired
+  DailyElectricityRepository dailyElectricityRepository;
+  
+  public DailyElectricityModel save(DailyElectricityModel dailyElectricity) {
+    return dailyElectricityRepository.save(dailyElectricity);
+  }
+  
+  public Page<DailyElectricityModel> findAllByPanelId(Long panelId) {
+      //its ok to be not optimized
+     Pageable pageable = PageRequest.of(100,100);
+    return dailyElectricityRepository.findAllByPanelId(panelId,pageable);
+  }
+  
+}
\ No newline at end of file
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
index c7cc890..5d05b73 100644
--- a/src/main/resources/application.properties
+++ b/src/main/resources/application.properties
@@ -2,7 +2,7 @@
 #Database connection Parameters
 spring.datasource.url: jdbc:mysql://localhost:3306/crosssolar?createDatabaseIfNotExist=true&useSSL=false
 spring.datasource.username=root
-spring.datasource.password=
+spring.datasource.password=root
 spring.datasource.driver-class-name=com.mysql.jdbc.Driver
 
 spring.jpa.hibernate.ddl-auto=none
diff --git a/src/main/resources/db/changelog/db.changelog-1.0.xml b/src/main/resources/db/changelog/db.changelog-1.0.xml
old mode 100755
new mode 100644
index e143a10..85375bc
--- a/src/main/resources/db/changelog/db.changelog-1.0.xml
+++ b/src/main/resources/db/changelog/db.changelog-1.0.xml
@@ -35,4 +35,6 @@
          <column name="reading_at">2018-01-31 09:00:00</column>
          </insert>
      </changeSet>
+    
+
 </databaseChangeLog>
diff --git a/src/main/resources/db/changelog/db.changelog-2.0.xml b/src/main/resources/db/changelog/db.changelog-2.0.xml
new file mode 100644
index 0000000..bca8067
--- /dev/null
+++ b/src/main/resources/db/changelog/db.changelog-2.0.xml
@@ -0,0 +1,30 @@
+<?xml version="1.1" encoding="UTF-8" standalone="no"?>
+<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
+    
+<changeSet author="sathya" id="1001122002_create_tables">
+        <createTable tableName="daily_electricity">
+            <column autoIncrement="true" name="id" type="BIGINT">
+                <constraints primaryKey="true" primaryKeyName="pk_id"/>
+            </column>
+            <column name="panel_id" type="BIGINT"/>
+            <column name="localday" type="datetime"/>
+            <column name="sum" type="BIGINT"/>
+            <column name="average" type="BIGINT"/>
+            <column name="min" type="BIGINT"/>
+            <column name="max" type="BIGINT"/>
+
+        </createTable>
+    </changeSet>
+
+    <changeSet author="sathya" id="1001122005">
+       <insert tableName="daily_electricity">
+           <column name="panel_id" >232323</column>  
+         <column name="localday">2018-05-31 09:00:00</column>
+         <column name="sum">100</column>
+         <column name="average">100</column>
+         <column name="min">100</column>
+         <column name="max">100</column>
+         </insert>
+     </changeSet>
+
+</databaseChangeLog>
diff --git a/src/main/resources/db/changelog/db.changelog-master.xml b/src/main/resources/db/changelog/db.changelog-master.xml
old mode 100755
new mode 100644
index ea61ac5..17efc06
--- a/src/main/resources/db/changelog/db.changelog-master.xml
+++ b/src/main/resources/db/changelog/db.changelog-master.xml
@@ -3,4 +3,6 @@
   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
   <include file="db/changelog/db.changelog-1.0.xml"/>
+  <include file="db/changelog/db.changelog-2.0.xml"/>
+
 </databaseChangeLog>
\ No newline at end of file
diff --git a/src/test/java/com/crossover/techtrial/controller/PanelControllerTest.java b/src/test/java/com/crossover/techtrial/controller/PanelControllerTest.java
index a1deacf..10e846b 100644
--- a/src/test/java/com/crossover/techtrial/controller/PanelControllerTest.java
+++ b/src/test/java/com/crossover/techtrial/controller/PanelControllerTest.java
@@ -1,6 +1,11 @@
 package com.crossover.techtrial.controller;
 
-import com.crossover.techtrial.model.Panel;
+import ch.qos.logback.core.CoreConstants;
+import com.crossover.techtrial.model.*;
+
+import java.util.Map;
+import java.util.HashMap;
+import java.util.List;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
@@ -16,7 +21,12 @@ import org.springframework.http.MediaType;
 import org.springframework.http.ResponseEntity;
 import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
 import org.springframework.test.web.servlet.MockMvc;
-
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.domain.PageImpl;
+import org.springframework.data.domain.PageRequest;
+import com.crossover.techtrial.dto.PageExtender;
+import com.crossover.techtrial.dto.DailyElectricity;
 import org.springframework.test.web.servlet.setup.MockMvcBuilders;
 
 
@@ -29,8 +39,8 @@ import org.springframework.test.web.servlet.setup.MockMvcBuilders;
 @RunWith(SpringJUnit4ClassRunner.class)
 @SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
 public class PanelControllerTest {
-  
-  MockMvc mockMvc;
+  //findbugs DLS_DEAD_LOCAL_STORE: Dead store to local variable
+ // MockMvc mockMvc;
   
   @Mock
   private PanelController panelController;
@@ -40,7 +50,8 @@ public class PanelControllerTest {
 
   @Before
   public void setup() throws Exception {
-    mockMvc = MockMvcBuilders.standaloneSetup(panelController).build();
+      //findbugs DLS_DEAD_LOCAL_STORE: Dead store to local variable
+    //mockMvc = MockMvcBuilders.standaloneSetup(panelController).build();
   }
 
   @Test
@@ -53,9 +64,39 @@ public class PanelControllerTest {
     Assert.assertEquals(202,response.getStatusCode().value());
   }
 
+ 
+   @Test
+  public void testGetHourlyGeneratedSaved() throws Exception {
+      
+      Map<String,Object> param = new HashMap<String,Object>();
+      param.put("panel-serial","1234567890123456");
+     Pageable page =  PageRequest.of(5,5);
+      param.put("pageable",page);
+      
+    ResponseEntity<?> response = template.getForEntity(
+        "/api/panels/{panel-serial}/hourly", String.class, param);
+    Assert.assertEquals(200,response.getStatusCode().value());
+  }
+
+  @Test
+  public void testGetDailyGeneratedSaved() throws Exception {
+      
+      Map<String,Object> param = new HashMap<String,Object>();
+      param.put("panel-serial","1234567890123456");
+     
+      
+    ResponseEntity<?> response = template.getForEntity(
+        "/api/panels/{panel-serial}/daily", String.class, param);
+   Assert.assertEquals(200,response.getStatusCode().value());
+  }
+  
+  
   private HttpEntity<Object> getHttpEntity(Object body) {
     HttpHeaders headers = new HttpHeaders();
     headers.setContentType(MediaType.APPLICATION_JSON);
     return new HttpEntity<Object>(body, headers);
   }
+  
+  
+  
 }
-- 
2.14.1.windows.1

